{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/chatpage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../pages/auth.css';\nimport './chatpage.css';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\nimport io from 'socket.io-client';\n// import { set } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:9001\");\nconst ChatPage = ({\n  userData,\n  handleLogout\n}) => {\n  _s();\n  const [dropDown, setdropDown] = useState(false);\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult, setSearchResult] = useState([]);\n  const [error, setError] = useState(null);\n  const [loding, setLoding] = useState();\n  const [selectedChat, setSelectedChat] = useState([]);\n  const [otherUser, setOtherUser] = useState([]);\n  const [personChat, setPersonChat] = useState(localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([]);\n  const [newchat, setNewChat] = useState([]);\n  // console.log(\"first\",userData)\n\n  const handleSearchKeyPress = e => {\n    if (e.key === 'Enter' && search.trim() !== \"\") {\n      // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    } else {\n      setSearchResult([]);\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      console.log(\"accessToken\", userData.accessToken);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      setLoding(true);\n      console.log(\"this is the data I want to fetch\");\n      const {\n        data\n      } = await axios.get(`http://localhost:8080/user?search=${search}`, config);\n      // console.log(\"data\")\n      // console.log(\"data\",data)\n      setLoding(false);\n      setSearchResult(data);\n      localStorage.setItem('search', search);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  };\n  // console.log(\"userData\", userData)\n\n  const joinRoom = chat => {\n    console.log(\"join room\", chat._id);\n    if (chat._id !== \"\") {\n      socket.emit(\"join_room\", chat._id);\n    }\n  };\n  const accessChat = async userId => {\n    console.log(\"this is userId\", userId);\n    // console.log(chats)\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      console.log(userData.accessToken);\n\n      // Check if the chat with the given user already exists in chats\n      const existingChat = newchat.find(chat => chat.users.some(user => user._id === userId));\n      console.log(\"existingChat\", existingChat);\n      if (!existingChat) {\n        // If the chat doesn't exist, create a new one\n        const {\n          data\n        } = await axios.post(\"http://localhost:8080/chat/one\", {\n          userId\n        }, config);\n        console.log(\"chats data:\", data);\n        setNewChat([...newchat, data]);\n        setSelectedChat(data); // Set the new chat as the selected chat\n        const namiUser = data.users.find(user => user._id === userId);\n        if (namiUser) {\n          setOtherUser(namiUser);\n          console.log(\"Nami's data:\", namiUser);\n        } else {\n          console.log(\"Nami not found in the users array.\");\n        }\n      } else {\n        // If the chat already exists, set it as the selected chat\n        setSelectedChat(existingChat);\n        const namiUser = existingChat.users.find(user => user._id === userId);\n        if (namiUser) {\n          setOtherUser(namiUser);\n          console.log(\"Nami's data:\", namiUser);\n        } else {\n          console.log(\"Nami not found in the users array.\");\n        }\n      }\n\n      // Set personChat to true only when a chat is selected\n      setPersonChat(true);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred');\n\n      // Reset personChat to false when an error occurs\n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"selected chat\", selectedChat);\n    console.log(\"ussop user\", otherUser);\n    joinRoom(selectedChat);\n  }, [selectedChat]);\n  useEffect(() => {\n    // if (!search) {\n    //   console.log(search)\n    //   setSearch('');\n    //   localStorage.removeItem('search'); // Clear search from localStorage\n    //   return; // Return early if search is empty\n    // }\n    // console.log(\"useEffect\", search)\n    handleUsers();\n  }, [search]);\n  useEffect(() => {\n    // Store the personChat state in localStorage\n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n  useEffect(() => {\n    // Check if personChat state exists in localStorage\n    const storedPersonChat = localStorage.getItem('personChat');\n    console.log(\"storePersonChat\", storedPersonChat);\n    if (storedPersonChat) {\n      // Parse and set the personChat state from localStorage\n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n  useEffect(() => {\n    console.log(\"hi this is without dependency\");\n    if (!search) {\n      console.log(\"in useeffect\");\n      // Fetch chats with last messages when no search query is entered\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`\n            }\n          };\n          const {\n            data\n          } = await axios.get('http://localhost:8080/chat/one', config);\n          console.log(\"in use data\", data);\n          // Filter chats with last messages\n          const chatsWithLastMessages = data.filter(chat => chat.latestMessage);\n          const usersNotMatchingId = chatsWithLastMessages.flatMap(chat => chat.users.filter(user => user._id !== userData.other._id));\n          console.log(\"usersNotMatchingId\", usersNotMatchingId);\n          setWithoutSearchRslt(usersNotMatchingId);\n        } catch (err) {\n          console.error('Error fetching chats with last messages:', err);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken]);\n  useEffect(() => {\n    console.log(\"hi this is without dependency\");\n    if (!search) {\n      console.log(\"in useeffect\");\n      // Fetch chats with last messages when no search query is entered\n      const fetchMessagesForResults = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`\n            }\n          };\n          const {\n            data\n          } = await axios.get('http://localhost:8080/chat/one', config);\n          console.log(\"in use data\", data);\n          // Filter chats with last messages\n          // const chatsWithLastMessages = data.filter((chat) => chat.latestMessage);\n          // const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n          //   chat.users.filter((user) => user._id !== userData.other._id)\n          // );\n          // console.log(\"usersNotMatchingId\",usersNotMatchingId)\n          // setWithoutSearchRslt(usersNotMatchingId);\n        } catch (err) {\n          console.error('Error fetching chats with last messages:', err);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n      fetchMessagesForResults();\n    }\n  }, [search, userData.accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-navbar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-profile-pic\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: userData.other.pic,\n                    alt: \"default\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-others\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-icons\",\n                  children: [/*#__PURE__*/_jsxDEV(GroupsIcon, {\n                    className: \"grpicons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                    className: \"grpicons\",\n                    onClick: () => setdropDown(!dropDown)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), dropDown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      children: \"My Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      onClick: () => handleLogout(personChat, setPersonChat),\n                      children: \"Log out\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-search-box\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-container\",\n              children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n                className: \"search-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: search,\n                onChange: e => setSearch(e.target.value),\n                onKeyPress: handleSearchKeyPress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"search-user-button\",\n                onClick: handleUsers,\n                children: \"Go\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-user-list\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-container\",\n              children: [console.log(\"withoutSaerchRslt\", withoutSaerchRslt), loding ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-list-item\",\n                  children: !search ? withoutSaerchRslt.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-item\",\n                    onClick: () => accessChat(item._id),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-profile\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"item-profile-pic\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: item.pic,\n                          alt: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-data\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item-identity\",\n                        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: item.username\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"lattest-msg\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"you: this is you messages\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 33\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 33\n                  }, this)) : searchResult.map((item, i) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item\",\n                        onClick: () => accessChat(item._id),\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user-item-profile\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"item-profile-pic\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: item.pic,\n                              alt: \"default\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 306,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 305,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user-item-data\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user-item-identity\",\n                            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                              children: item.username\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 311,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 310,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"lattest-msg\",\n                            children: /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: \"you: this is you messages\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 314,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 313,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 35\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container-left\",\n        children: personChat ? /*#__PURE__*/_jsxDEV(MyChat, {\n          userData: userData,\n          selectedChat: selectedChat,\n          setSelectedChat: setSelectedChat,\n          socket: socket,\n          chatId: selectedChat._id,\n          user: otherUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsapp-home\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-container-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-icon\",\n                children: /*#__PURE__*/_jsxDEV(WhatsAppIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-para\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"WhatsApp Web\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"home-whatsapp-title\",\n                  children: [\"Send and receive messages without keeping your phone online.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 120\n                  }, this), \"Use WhatsApp on up to 4 linked devices and 1 phone at the same time.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"UY3NYfZtYaqZpab8u49noiO9gu4=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","WhatsAppIcon","GroupsIcon","MoreVertIcon","SearchIcon","axios","MyChat","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","connect","ChatPage","userData","handleLogout","_s","dropDown","setdropDown","search","setSearch","localStorage","getItem","searchResult","setSearchResult","error","setError","loding","setLoding","selectedChat","setSelectedChat","otherUser","setOtherUser","personChat","setPersonChat","withoutSaerchRslt","setWithoutSearchRslt","newchat","setNewChat","handleSearchKeyPress","e","key","trim","handleUsers","removeItem","console","log","accessToken","config","headers","Authorization","data","get","setItem","err","joinRoom","chat","_id","emit","accessChat","userId","existingChat","find","users","some","user","post","namiUser","JSON","stringify","storedPersonChat","parse","fetchChatsWithLastMessages","chatsWithLastMessages","filter","latestMessage","usersNotMatchingId","flatMap","other","fetchMessagesForResults","className","children","src","pic","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","onKeyPress","map","item","i","username","chatId","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/chatpage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../pages/auth.css'\nimport './chatpage.css'\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\n\nimport io from 'socket.io-client'\n// import { set } from 'mongoose';\n\nconst socket = io.connect(\"http://localhost:9001\")\nconst ChatPage = ({userData,handleLogout}) => {\n\n  const [dropDown, setdropDown] = useState(false)\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult,setSearchResult] = useState([])\n  const [error, setError] = useState(null); \n  const [loding, setLoding] = useState()\n  const [selectedChat, setSelectedChat] = useState([])\n  const [otherUser, setOtherUser] = useState([])\n  const [personChat, setPersonChat] = useState(\n    localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([])\n  const [newchat, setNewChat] = useState([])\n  // console.log(\"first\",userData)\n\n\n  const handleSearchKeyPress = (e) => {\n    if (e.key === 'Enter' && search.trim() !== \"\") { // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    }else {\n      setSearchResult([])\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      console.log(\"accessToken\",userData.accessToken)\n      const config = {\n          headers: {\n            Authorization :`Bearer ${userData.accessToken}`\n          }\n      }\n      setLoding(true)\n      console.log(\"this is the data I want to fetch\")\n      const {data} = await axios.get(`http://localhost:8080/user?search=${search}`,config)\n      // console.log(\"data\")\n      // console.log(\"data\",data)\n      setLoding(false)\n      setSearchResult(data)\n      localStorage.setItem('search', search);\n    }catch(err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  }\n  // console.log(\"userData\", userData)\n  \n  const joinRoom =(chat)=> {\n    console.log(\"join room\",chat._id)\n    if(chat._id !== \"\") {\n      socket.emit(\"join_room\",chat._id)\n    }\n    \n  }\n  const accessChat = async (userId) => {\n    console.log(\"this is userId\", userId);\n    // console.log(chats)\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`,\n        },\n      };\n      console.log(userData.accessToken);\n  \n      // Check if the chat with the given user already exists in chats\n      const existingChat = newchat.find((chat) =>chat.users.some((user) => user._id === userId));\n      \n      console.log(\"existingChat\", existingChat);\n      if (!existingChat) {\n        // If the chat doesn't exist, create a new one\n        const { data } = await axios.post(\"http://localhost:8080/chat/one\", { userId }, config);\n        console.log(\"chats data:\", data)\n       \n        setNewChat([...newchat,data])\n        \n        setSelectedChat(data);// Set the new chat as the selected chat\n        const namiUser = data.users.find(user => user._id === userId);\n\n        if (namiUser) {\n            setOtherUser(namiUser)\n            console.log(\"Nami's data:\", namiUser);\n        } else {\n            console.log(\"Nami not found in the users array.\");\n        }\n      } else {\n        // If the chat already exists, set it as the selected chat\n        setSelectedChat(existingChat);\n        const namiUser = existingChat.users.find(user => user._id === userId);\n\n        if (namiUser) {\n            setOtherUser(namiUser)\n            console.log(\"Nami's data:\", namiUser);\n        } else {\n            console.log(\"Nami not found in the users array.\");\n        }\n      }\n  \n      // Set personChat to true only when a chat is selected\n      setPersonChat(true);\n  \n      \n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred');\n  \n      // Reset personChat to false when an error occurs\n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"selected chat\", selectedChat);\n    console.log(\"ussop user\", otherUser)\n    joinRoom(selectedChat)\n  }, [selectedChat]);\n  \n  useEffect(() => {\n    // if (!search) {\n    //   console.log(search)\n    //   setSearch('');\n    //   localStorage.removeItem('search'); // Clear search from localStorage\n    //   return; // Return early if search is empty\n    // }\n    // console.log(\"useEffect\", search)\n   handleUsers()\n  }, [search]);\n\n  useEffect(() => {\n    // Store the personChat state in localStorage\n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n\n  useEffect(() => {\n    // Check if personChat state exists in localStorage\n    const storedPersonChat = localStorage.getItem('personChat');\n    console.log(\"storePersonChat\",storedPersonChat)\n    if (storedPersonChat) {\n      // Parse and set the personChat state from localStorage\n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n\n  useEffect(() => {\n    console.log(\"hi this is without dependency\")\n    if (!search) {\n      console.log(\"in useeffect\")\n      // Fetch chats with last messages when no search query is entered\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`,\n            },\n          };\n          const { data } = await axios.get('http://localhost:8080/chat/one', config);\n          console.log(\"in use data\",data)\n          // Filter chats with last messages\n          const chatsWithLastMessages = data.filter((chat) => chat.latestMessage);\n          const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n            chat.users.filter((user) => user._id !== userData.other._id)\n          );\n          console.log(\"usersNotMatchingId\",usersNotMatchingId)\n          setWithoutSearchRslt(usersNotMatchingId);\n        } catch (err) {\n          console.error('Error fetching chats with last messages:', err);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n\n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken]);\n  useEffect(() => {\n    console.log(\"hi this is without dependency\")\n    if (!search) {\n      console.log(\"in useeffect\")\n      // Fetch chats with last messages when no search query is entered\n      const fetchMessagesForResults = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`,\n            },\n          };\n          const { data } = await axios.get('http://localhost:8080/chat/one', config);\n          console.log(\"in use data\",data)\n          // Filter chats with last messages\n          // const chatsWithLastMessages = data.filter((chat) => chat.latestMessage);\n          // const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n          //   chat.users.filter((user) => user._id !== userData.other._id)\n          // );\n          // console.log(\"usersNotMatchingId\",usersNotMatchingId)\n          // setWithoutSearchRslt(usersNotMatchingId);\n        } catch (err) {\n          console.error('Error fetching chats with last messages:', err);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n\n      fetchMessagesForResults();\n    }\n  }, [search, userData.accessToken]);\n  return (\n    <div className='chatpage'>\n      <div className='chat-container'>\n\n\n        <div className='chat-right'>\n          <div className='right-container'>\n            <div className='right-container-navbar'>\n              <div className='nav-container'>\n                <div className='profile'>\n                  <div className='nav-profile-pic'>\n                    <img src={userData.other.pic} alt=\"default\" />\n                  </div>\n                </div>\n                <div className='group-others'>\n                  <div className='group-icons'>\n                    <GroupsIcon className =\"grpicons\"/>\n                    <MoreVertIcon className='grpicons' onClick={()=> setdropDown(!dropDown)}/>\n                    {\n                      dropDown && (\n                        <div className='dropdown'>\n                          <div className='dropBtn' >\n                            My Profile\n                          </div>\n                          <div className='dropBtn' onClick={()=>handleLogout(personChat,setPersonChat)}>\n                            Log out\n                          </div>\n                        </div>\n                      )\n                    }\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='right-search-box'>\n                {error && <p className=\"error-message\">{error}</p>}\n                <div className='search-container'>\n                  <SearchIcon className='search-icon'/>\n                  <input type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}\n                    onKeyPress={handleSearchKeyPress}\n                  />\n                  <button className='search-user-button' onClick={handleUsers}>Go</button>\n                </div>\n            </div>\n            <div className='right-container-user-list'>\n              <div className='list-container'>\n                    {console.log(\"withoutSaerchRslt\",withoutSaerchRslt)}\n                  {\n                    loding ? (\n                      <div>Loding</div>\n                    ): (\n                      <div className='user-list-container'>\n                        <div className='user-list-item'>\n                          {\n                            !search ? (\n                              withoutSaerchRslt.map((item, i) => (\n                                <div className='user-item' key={i} onClick={() => accessChat(item._id)}>\n                                <div className='user-item-profile'>\n                                  <div className='item-profile-pic'>\n                                    <img src={item.pic} alt=\"default\" />\n                                  </div>\n                                </div>\n                                <div className='user-item-data'>\n                                  <div className='user-item-identity'>\n                                    <h3>{item.username}</h3>\n                                    \n                                  </div>\n                                  <div className='lattest-msg'>\n                                    <p>you: this is you messages</p>\n                                  </div>\n                                </div>\n                              </div>\n                              ))\n                            ):(\n                              searchResult.map((item,i)=> {\n                                return (<>\n                                <div className='user-item' key={i} onClick={() => accessChat(item._id)}>\n                                  <div className='user-item-profile'>\n                                    <div className='item-profile-pic'>\n                                      <img src={item.pic} alt=\"default\" />\n                                    </div>\n                                  </div>\n                                  <div className='user-item-data'>\n                                    <div className='user-item-identity'>\n                                      <h3>{item.username}</h3>\n                                    </div>\n                                    <div className='lattest-msg'>\n                                      <p>you: this is you messages</p>\n                                    </div>\n                                  </div>\n                                </div>\n                                  \n                                </>\n                                )\n                              })\n                            )\n\n                          }\n                        \n                          \n                        \n                        </div>\n                      </div>\n                      \n                    )\n                  }\n                  \n                  \n                \n              </div>\n            </div>\n            \n          </div>\n        </div>\n\n\n        <div className='chat-container-left'>\n          {\n            personChat ? <MyChat userData={userData} selectedChat={selectedChat} setSelectedChat={setSelectedChat}  socket={socket} chatId={selectedChat._id} user={otherUser}/> :(\n              <div className='whatsapp-home'>\n                <div className='home-container'>\n                  <div className='home-container-box'>\n                    <div className='home-container-icon'>\n                      <WhatsAppIcon className='icon'/>\n                    </div>\n                    <div className='home-container-para'>\n                      <div>\n                        <h1>WhatsApp Web</h1>\n                      </div>\n                      <div className=\"home-whatsapp-title\">Send and receive messages without keeping your phone online.<br/>Use WhatsApp on up to 4 linked devices and 1 phone at the same time.</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n          \n        </div>  \n      </div>      \n    </div>\n  )\n}\n\nexport default ChatPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}