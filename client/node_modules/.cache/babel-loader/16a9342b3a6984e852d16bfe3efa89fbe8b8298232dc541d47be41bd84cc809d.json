{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/chatpage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../../pages/auth.css';\nimport './chatpage.css';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\nimport io from 'socket.io-client';\n// import { set } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:9001\");\nconst ChatPage = ({\n  userData,\n  handleLogout\n}) => {\n  _s();\n  const [dropDown, setdropDown] = useState(false);\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult, setSearchResult] = useState([]);\n  const [error, setError] = useState(null);\n  const [loding, setLoding] = useState();\n  const [selectedChat, setSelectedChat] = useState([]);\n  const [otherUser, setOtherUser] = useState([]);\n  const [personChat, setPersonChat] = useState(localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([]);\n  const [newchat, setNewChat] = useState([]);\n  const chatBodyRef = useRef();\n  // console.log(\"first\",userData)\n\n  const handleSearchKeyPress = e => {\n    if (e.key === 'Enter' && search.trim() !== \"\") {\n      // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    } else {\n      setSearchResult([]);\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      console.log(\"accessToken\", userData.accessToken);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      setLoding(true);\n      console.log(\"this is the data I want to fetch\");\n      const {\n        data\n      } = await axios.get(`http://localhost:8080/user?search=${search}`, config);\n      // console.log(\"data\")\n      // console.log(\"data\",data)\n      setLoding(false);\n      setSearchResult(data);\n      localStorage.setItem('search', search);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  };\n  // console.log(\"userData\", userData)\n\n  const joinRoom = chat => {\n    console.log(\"join room\", chat._id);\n    if (chat._id !== \"\") {\n      socket.emit(\"join_room\", chat._id);\n    }\n  };\n  const accessChat = async userId => {\n    console.log(\"this is userId\", userId);\n    // console.log(chats)\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      console.log(userData.accessToken);\n\n      // Check if the chat with the given user already exists in chats\n      const existingChat = newchat.find(chat => chat.users.some(user => user._id === userId));\n      console.log(\"existingChat\", existingChat);\n      if (!existingChat) {\n        // If the chat doesn't exist, create a new one\n        const {\n          data\n        } = await axios.post(\"http://localhost:8080/chat/one\", {\n          userId\n        }, config);\n        console.log(\"chats data:\", data);\n        setNewChat([...newchat, data]);\n        setSelectedChat(data); // Set the new chat as the selected chat\n        const namiUser = data.users.find(user => user._id === userId);\n        if (namiUser) {\n          setOtherUser(namiUser);\n          console.log(\"Nami's data:\", namiUser);\n        } else {\n          console.log(\"Nami not found in the users array.\");\n        }\n      } else {\n        // If the chat already exists, set it as the selected chat\n        setSelectedChat(existingChat);\n        const namiUser = existingChat.users.find(user => user._id === userId);\n        if (namiUser) {\n          setOtherUser(namiUser);\n          console.log(\"Nami's data:\", namiUser);\n        } else {\n          console.log(\"Nami not found in the users array.\");\n        }\n      }\n\n      // Set personChat to true only when a chat is selected\n      setPersonChat(true);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred');\n\n      // Reset personChat to false when an error occurs\n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"selected chat\", selectedChat);\n    console.log(\"ussop user\", otherUser);\n    joinRoom(selectedChat);\n  }, [selectedChat]);\n  useEffect(() => {\n    // if (!search) {\n    //   console.log(search)\n    //   setSearch('');\n    //   localStorage.removeItem('search'); // Clear search from localStorage\n    //   return; // Return early if search is empty\n    // }\n    // console.log(\"useEffect\", search)\n    handleUsers();\n  }, [search]);\n  useEffect(() => {\n    // Store the personChat state in localStorage\n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n  useEffect(() => {\n    // Check if personChat state exists in localStorage\n    const storedPersonChat = localStorage.getItem('personChat');\n    console.log(\"storePersonChat\", storedPersonChat);\n    if (storedPersonChat) {\n      // Parse and set the personChat state from localStorage\n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n\n  // useEffect(() => {\n  //   console.log(\"hi this is without dependency\")\n  //   if (!search) {\n  //     console.log(\"in useeffect\")\n  //     // Fetch chats with last messages when no search query is entered\n  //     const fetchChatsWithLastMessages = async () => {\n  //       try {\n  //         const config = {\n  //           headers: {\n  //             Authorization: `Bearer ${userData.accessToken}`,\n  //           },\n  //         };\n  //     const { data } = await axios.get('http://localhost:8080/chat/one', config);\n  //     console.log(\"in use data\",data)\n  //     // Filter chats with last messages\n  //     const chatsWithLastMessages = data.filter((chat) => chat.latestMessage);\n  //     const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n  //       chat.users.filter((user) => user._id !== userData.other._id)\n  //     );\n  //     console.log(\"usersNotMatchingId\",usersNotMatchingId)\n  //     setWithoutSearchRslt(usersNotMatchingId);\n  //   } catch (err) {\n  //     console.error('Error fetching chats with last messages:', err);\n  //     setError('An error occurred while fetching chats.');\n  //   }\n  // };\n\n  //     fetchChatsWithLastMessages();\n  //   }\n  // }, [search, userData.accessToken]);\n  useEffect(() => {\n    if (!search) {\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`\n            }\n          };\n\n          // Fetch chat data\n          const chatResponse = await axios.get('http://localhost:8080/chat/one', config);\n          const chatData = chatResponse.data;\n          // console.log(\"chatData from chat Response\",chatData)\n          // Initialize an array to store chats with last messages\n          const chatsWithLastMessages = [];\n\n          // Loop through each chat\n          for (const chat of chatData) {\n            // Construct the URL for messages in the chat\n            const chatMessagesUrl = `http://localhost:8080/message/${chat._id}`;\n\n            // Fetch message data for the chat\n            const messageResponse = await axios.get(chatMessagesUrl, config);\n            const messageData = messageResponse.data;\n            // console.log(\"this is messageData\",messageData)\n            // Check if there are messages in the chat\n            if (messageData.length > 0) {\n              // Add the chat to the array if it has messages\n              chatsWithLastMessages.push(chat);\n            }\n          }\n          console.log(\"this is chat with last messages:\", chatsWithLastMessages);\n          const usersNotMatchingId = chatsWithLastMessages.flatMap(chat => chat.users.filter(user => user._id !== userData.other._id));\n          // Set the chats with last messages in the state\n          setWithoutSearchRslt(usersNotMatchingId);\n        } catch (error) {\n          console.error('Error fetching chats with last messages:', error);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n\n      // Call the function to fetch chats with last messages\n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt]);\n  useEffect(() => {\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-navbar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-profile-pic\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: userData.other.pic,\n                    alt: \"default\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-others\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-icons\",\n                  children: [/*#__PURE__*/_jsxDEV(GroupsIcon, {\n                    className: \"grpicons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                    className: \"grpicons\",\n                    onClick: () => setdropDown(!dropDown)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this), dropDown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      children: \"My Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      onClick: () => handleLogout(personChat, setPersonChat),\n                      children: \"Log out\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-search-box\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-container\",\n              children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n                className: \"search-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: search,\n                onChange: e => setSearch(e.target.value),\n                onKeyPress: handleSearchKeyPress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"search-user-button\",\n                onClick: handleUsers,\n                children: \"Go\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-user-list\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-container\",\n              children: [console.log(\"withoutSaerchRslt\", withoutSaerchRslt), loding ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-container\",\n                ref: chatBodyRef,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-list-item\",\n                  children: !search ? withoutSaerchRslt.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-item\",\n                    onClick: () => accessChat(item._id),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-profile\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"item-profile-pic\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: item.pic,\n                          alt: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 310,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-data\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item-identity\",\n                        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: item.username\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"lattest-msg\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"you: this is you messages\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 33\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 33\n                  }, this)) : searchResult.map((item, i) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item\",\n                        onClick: () => accessChat(item._id),\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user-item-profile\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"item-profile-pic\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: item.pic,\n                              alt: \"default\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 330,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user-item-data\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user-item-identity\",\n                            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                              children: item.username\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 335,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"lattest-msg\",\n                            children: /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: \"you: this is you messages\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 338,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 35\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container-left\",\n        children: personChat ? /*#__PURE__*/_jsxDEV(MyChat, {\n          userData: userData,\n          selectedChat: selectedChat,\n          setSelectedChat: setSelectedChat,\n          socket: socket,\n          chatId: selectedChat._id,\n          user: otherUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsapp-home\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-container-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-icon\",\n                children: /*#__PURE__*/_jsxDEV(WhatsAppIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-para\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"WhatsApp Web\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"home-whatsapp-title\",\n                  children: [\"Send and receive messages without keeping your phone online.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 120\n                  }, this), \"Use WhatsApp on up to 4 linked devices and 1 phone at the same time.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"xL6ryeG0NxxtctFYfoPSYrMu3TI=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WhatsAppIcon","GroupsIcon","MoreVertIcon","SearchIcon","axios","MyChat","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","connect","ChatPage","userData","handleLogout","_s","dropDown","setdropDown","search","setSearch","localStorage","getItem","searchResult","setSearchResult","error","setError","loding","setLoding","selectedChat","setSelectedChat","otherUser","setOtherUser","personChat","setPersonChat","withoutSaerchRslt","setWithoutSearchRslt","newchat","setNewChat","chatBodyRef","handleSearchKeyPress","e","key","trim","handleUsers","removeItem","console","log","accessToken","config","headers","Authorization","data","get","setItem","err","joinRoom","chat","_id","emit","accessChat","userId","existingChat","find","users","some","user","post","namiUser","JSON","stringify","storedPersonChat","parse","fetchChatsWithLastMessages","chatResponse","chatData","chatsWithLastMessages","chatMessagesUrl","messageResponse","messageData","length","push","usersNotMatchingId","flatMap","filter","other","current","scrollTop","scrollHeight","className","children","src","pic","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","onKeyPress","ref","map","item","i","username","chatId","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/chatpage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport '../../pages/auth.css'\nimport './chatpage.css'\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\n\nimport io from 'socket.io-client'\n// import { set } from 'mongoose';\n\nconst socket = io.connect(\"http://localhost:9001\")\nconst ChatPage = ({userData,handleLogout}) => {\n\n  const [dropDown, setdropDown] = useState(false)\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult,setSearchResult] = useState([])\n  const [error, setError] = useState(null); \n  const [loding, setLoding] = useState()\n  const [selectedChat, setSelectedChat] = useState([])\n  const [otherUser, setOtherUser] = useState([])\n  const [personChat, setPersonChat] = useState(\n    localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([])\n  const [newchat, setNewChat] = useState([])\n  const chatBodyRef = useRef();\n  // console.log(\"first\",userData)\n\n\n  const handleSearchKeyPress = (e) => {\n    if (e.key === 'Enter' && search.trim() !== \"\") { // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    }else {\n      setSearchResult([])\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      console.log(\"accessToken\",userData.accessToken)\n      const config = {\n          headers: {\n            Authorization :`Bearer ${userData.accessToken}`\n          }\n      }\n      setLoding(true)\n      console.log(\"this is the data I want to fetch\")\n      const {data} = await axios.get(`http://localhost:8080/user?search=${search}`,config)\n      // console.log(\"data\")\n      // console.log(\"data\",data)\n      setLoding(false)\n      setSearchResult(data)\n      localStorage.setItem('search', search);\n    }catch(err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  }\n  // console.log(\"userData\", userData)\n  \n  const joinRoom =(chat)=> {\n    console.log(\"join room\",chat._id)\n    if(chat._id !== \"\") {\n      socket.emit(\"join_room\",chat._id)\n    }\n    \n  }\n  const accessChat = async (userId) => {\n    console.log(\"this is userId\", userId);\n    // console.log(chats)\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`,\n        },\n      };\n      console.log(userData.accessToken);\n  \n      // Check if the chat with the given user already exists in chats\n      const existingChat = newchat.find((chat) =>chat.users.some((user) => user._id === userId));\n      \n      console.log(\"existingChat\", existingChat);\n      if (!existingChat) {\n        // If the chat doesn't exist, create a new one\n        const { data } = await axios.post(\"http://localhost:8080/chat/one\", { userId }, config);\n        console.log(\"chats data:\", data)\n       \n        setNewChat([...newchat,data])\n        \n        setSelectedChat(data);// Set the new chat as the selected chat\n        const namiUser = data.users.find(user => user._id === userId);\n\n        if (namiUser) {\n            setOtherUser(namiUser)\n            console.log(\"Nami's data:\", namiUser);\n        } else {\n            console.log(\"Nami not found in the users array.\");\n        }\n      } else {\n        // If the chat already exists, set it as the selected chat\n        setSelectedChat(existingChat);\n        const namiUser = existingChat.users.find(user => user._id === userId);\n\n        if (namiUser) {\n            setOtherUser(namiUser)\n            console.log(\"Nami's data:\", namiUser);\n        } else {\n            console.log(\"Nami not found in the users array.\");\n        }\n      }\n  \n      // Set personChat to true only when a chat is selected\n      setPersonChat(true);\n  \n      \n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred');\n  \n      // Reset personChat to false when an error occurs\n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"selected chat\", selectedChat);\n    console.log(\"ussop user\", otherUser)\n    joinRoom(selectedChat)\n  }, [selectedChat]);\n  \n  useEffect(() => {\n    // if (!search) {\n    //   console.log(search)\n    //   setSearch('');\n    //   localStorage.removeItem('search'); // Clear search from localStorage\n    //   return; // Return early if search is empty\n    // }\n    // console.log(\"useEffect\", search)\n   handleUsers()\n  }, [search]);\n\n  useEffect(() => {\n    // Store the personChat state in localStorage\n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n\n  useEffect(() => {\n    // Check if personChat state exists in localStorage\n    const storedPersonChat = localStorage.getItem('personChat');\n    console.log(\"storePersonChat\",storedPersonChat)\n    if (storedPersonChat) {\n      // Parse and set the personChat state from localStorage\n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n\n  // useEffect(() => {\n  //   console.log(\"hi this is without dependency\")\n  //   if (!search) {\n  //     console.log(\"in useeffect\")\n  //     // Fetch chats with last messages when no search query is entered\n  //     const fetchChatsWithLastMessages = async () => {\n  //       try {\n  //         const config = {\n  //           headers: {\n  //             Authorization: `Bearer ${userData.accessToken}`,\n  //           },\n  //         };\n      //     const { data } = await axios.get('http://localhost:8080/chat/one', config);\n      //     console.log(\"in use data\",data)\n      //     // Filter chats with last messages\n      //     const chatsWithLastMessages = data.filter((chat) => chat.latestMessage);\n      //     const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n      //       chat.users.filter((user) => user._id !== userData.other._id)\n      //     );\n      //     console.log(\"usersNotMatchingId\",usersNotMatchingId)\n      //     setWithoutSearchRslt(usersNotMatchingId);\n      //   } catch (err) {\n      //     console.error('Error fetching chats with last messages:', err);\n      //     setError('An error occurred while fetching chats.');\n      //   }\n      // };\n\n  //     fetchChatsWithLastMessages();\n  //   }\n  // }, [search, userData.accessToken]);\n  useEffect(() => {\n    if (!search) {\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`,\n            },\n          };\n  \n          // Fetch chat data\n          const chatResponse = await axios.get('http://localhost:8080/chat/one', config);\n          const chatData = chatResponse.data;\n          // console.log(\"chatData from chat Response\",chatData)\n          // Initialize an array to store chats with last messages\n          const chatsWithLastMessages = [];\n  \n          // Loop through each chat\n          for (const chat of chatData) {\n            // Construct the URL for messages in the chat\n            const chatMessagesUrl = `http://localhost:8080/message/${chat._id}`;\n  \n            // Fetch message data for the chat\n            const messageResponse = await axios.get(chatMessagesUrl, config);\n            const messageData = messageResponse.data;\n            // console.log(\"this is messageData\",messageData)\n            // Check if there are messages in the chat\n            if (messageData.length > 0) {\n              // Add the chat to the array if it has messages\n              chatsWithLastMessages.push(chat);\n            }\n          }\n\n          console.log(\"this is chat with last messages:\",chatsWithLastMessages)\n          const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n            chat.users.filter((user) => user._id !== userData.other._id)\n          );\n          // Set the chats with last messages in the state\n          setWithoutSearchRslt(usersNotMatchingId);\n        } catch (error) {\n          console.error('Error fetching chats with last messages:', error);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n  \n      // Call the function to fetch chats with last messages\n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt]);\n\n  useEffect(() => {\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n  });\n  return (\n    <div className='chatpage'>\n      <div className='chat-container'>\n\n\n        <div className='chat-right'>\n          <div className='right-container'>\n            <div className='right-container-navbar'>\n              <div className='nav-container'>\n                <div className='profile'>\n                  <div className='nav-profile-pic'>\n                    <img src={userData.other.pic} alt=\"default\" />\n                  </div>\n                </div>\n                <div className='group-others'>\n                  <div className='group-icons'>\n                    <GroupsIcon className =\"grpicons\"/>\n                    <MoreVertIcon className='grpicons' onClick={()=> setdropDown(!dropDown)}/>\n                    {\n                      dropDown && (\n                        <div className='dropdown'>\n                          <div className='dropBtn' >\n                            My Profile\n                          </div>\n                          <div className='dropBtn' onClick={()=>handleLogout(personChat,setPersonChat)}>\n                            Log out\n                          </div>\n                        </div>\n                      )\n                    }\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='right-search-box'>\n                {error && <p className=\"error-message\">{error}</p>}\n                <div className='search-container'>\n                  <SearchIcon className='search-icon'/>\n                  <input type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}\n                    onKeyPress={handleSearchKeyPress}\n                  />\n                  <button className='search-user-button' onClick={handleUsers}>Go</button>\n                </div>\n            </div>\n            <div className='right-container-user-list'>\n              <div className='list-container' >\n                    {console.log(\"withoutSaerchRslt\",withoutSaerchRslt)}\n                  {\n                    loding ? (\n                      <div>Loding</div>\n                    ): (\n                      <div className='user-list-container' ref={chatBodyRef}>\n                        <div className='user-list-item'>\n                          {\n                            !search ? (\n                              withoutSaerchRslt.map((item, i) => (\n                                <div className='user-item' key={i} onClick={() => accessChat(item._id)}>\n                                <div className='user-item-profile'>\n                                  <div className='item-profile-pic'>\n                                    <img src={item.pic} alt=\"default\" />\n                                  </div>\n                                </div>\n                                <div className='user-item-data'>\n                                  <div className='user-item-identity'>\n                                    <h3>{item.username}</h3>\n                                    \n                                  </div>\n                                  <div className='lattest-msg'>\n                                    <p>you: this is you messages</p>\n                                  </div>\n                                </div>\n                              </div>\n                              ))\n                            ):(\n                              searchResult.map((item,i)=> {\n                                return (<>\n                                <div className='user-item' key={i} onClick={() => accessChat(item._id)}>\n                                  <div className='user-item-profile'>\n                                    <div className='item-profile-pic'>\n                                      <img src={item.pic} alt=\"default\" />\n                                    </div>\n                                  </div>\n                                  <div className='user-item-data'>\n                                    <div className='user-item-identity'>\n                                      <h3>{item.username}</h3>\n                                    </div>\n                                    <div className='lattest-msg'>\n                                      <p>you: this is you messages</p>\n                                    </div>\n                                  </div>\n                                </div>\n                                  \n                                </>\n                                )\n                              })\n                            )\n\n                          }\n                        \n                          \n                        \n                        </div>\n                      </div>\n                      \n                    )\n                  }\n                  \n                  \n                \n              </div>\n            </div>\n            \n          </div>\n        </div>\n\n\n        <div className='chat-container-left'>\n          {\n            personChat ? <MyChat userData={userData} selectedChat={selectedChat} setSelectedChat={setSelectedChat}  socket={socket} chatId={selectedChat._id} user={otherUser}/> :(\n              <div className='whatsapp-home'>\n                <div className='home-container'>\n                  <div className='home-container-box'>\n                    <div className='home-container-icon'>\n                      <WhatsAppIcon className='icon'/>\n                    </div>\n                    <div className='home-container-para'>\n                      <div>\n                        <h1>WhatsApp Web</h1>\n                      </div>\n                      <div className=\"home-whatsapp-title\">Send and receive messages without keeping your phone online.<br/>Use WhatsApp on up to 4 linked devices and 1 phone at the same time.</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n          \n        </div>  \n      </div>      \n    </div>\n  )\n}\n\nexport default ChatPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}