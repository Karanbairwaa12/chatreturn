{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/mychat/MyChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport './mychat.css';\nimport axios from 'axios';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChat = ({\n  userData,\n  selectedChat,\n  setSelectedChat,\n  chats,\n  setChats,\n  user,\n  socket,\n  chatId\n}) => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState([]);\n  const [inputMsg, setInputMsg] = useState(\"\");\n  const [message, setMessage] = useState({\n    data: []\n  });\n  const [dropDown, setdropDown] = useState(false);\n  const [profileCheck, setProfileCheck] = useState(false);\n  // const [socketConnected, setSocketConnected] = useState(false)\n\n  let selectedChatCompare;\n  const chatBodyRef = useRef();\n  // console.log(\"I dont want this\",user)\n  const myUser = user;\n  // console.log(\"myUser\",myUser)\n  //  console.log(\"fetche message\",message)\n  // console.log(\"data:\",userData, selectedChat, chats, user,socket,chatId)\n\n  const handleSubmit = event => {\n    setInputMsg(event.target.value);\n    console.log(\"handleSubmt\", message);\n  };\n  const handleProfile = () => {\n    setProfileCheck(!profileCheck);\n  };\n  const fetchMessages = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      const response = await axios.get(`http://localhost:8080/message/${selectedChat._id}`, config);\n      const responseData = response.data;\n\n      // console.log(\"this is the message I want\", responseData);\n\n      setMessage({\n        data: responseData\n      });\n      // console.log(\"responseData:\",responseData)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const fetchChats = async () => {\n    console.log(\"user\", myUser);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      const data = await axios.get(\"http://localhost:8080/chat/one\", config);\n      setChats(data);\n      // console.log(\"this is the chat I want\",data)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      setInputMsg(\"\");\n      const {\n        data\n      } = await axios.post(\"http://localhost:8080/message\", {\n        content: inputMsg,\n        chatId: selectedChat._id\n      }, config);\n\n      // console.log(\"this is msg\",data)\n\n      // Update the state using the current state\n      await socket.emit(\"new_message\", data);\n      setMessage(prevState => {\n        return {\n          data: [...prevState.data, data]\n        };\n      });\n    } catch (err) {}\n  };\n  useEffect(() => {\n    fetchMessages();\n    // console.log(\"useEffect set message\",message)\n  }, [selectedChat]);\n  useEffect(() => {\n    const chatBody = document.getElementById('chat-body');\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  }, [message.data]);\n  useEffect(() => {\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n  });\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('userData');\n    if (storedUserData) {\n      // console.log(\"hi\",storedUserData)\n      // console.log(\"hello\",JSON.parse(storedUserData))\n      setLoggedUser(JSON.parse(storedUserData));\n    }\n    fetchChats();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      const isMessageAlreadyExists = message.data.some(item => item._id === data._id);\n      if (!isMessageAlreadyExists) {\n        setMessage(prevState => {\n          return {\n            data: [...prevState.data, data]\n          };\n        });\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  }, [socket]);\n  console.log(\"logged user\", loggedUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container-navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-profile-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData.other.pic,\n                alt: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-user-name\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: myUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-others\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-icons\",\n              children: [/*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                className: \"grpicons\",\n                onClick: () => setdropDown(!dropDown)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), dropDown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropBtn\",\n                  onClick: handleProfile,\n                  children: \"profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        ref: chatBodyRef,\n        children: [console.log(message.data), message.data && message.data.map((item, i) => {\n          const isMyMessage = item.sender._id === userData.other._id;\n          const messageContainerClass = isMyMessage ? 'message right-message' : 'message left-message';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: messageContainerClass,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: item.createdAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"authors\",\n                  children: item.sender.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Hey...\",\n            value: inputMsg,\n            onChange: event => {\n              handleSubmit(event);\n            },\n            onKeyPress: event => {\n              if (event.key === \"Enter\" || event.keyCode === 13) {\n                sendMessage();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChat, \"A37K3uZhg/FE867Zi7ktVwcU1GM=\");\n_c = MyChat;\nexport default MyChat;\nvar _c;\n$RefreshReg$(_c, \"MyChat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","GroupsIcon","axios","ArrowForwardIosIcon","MoreVertIcon","jsxDEV","_jsxDEV","MyChat","userData","selectedChat","setSelectedChat","chats","setChats","user","socket","chatId","_s","loggedUser","setLoggedUser","inputMsg","setInputMsg","message","setMessage","data","dropDown","setdropDown","profileCheck","setProfileCheck","selectedChatCompare","chatBodyRef","myUser","handleSubmit","event","target","value","console","log","handleProfile","fetchMessages","config","headers","Authorization","accessToken","response","get","_id","responseData","err","fetchChats","sendMessage","post","content","emit","prevState","chatBody","document","getElementById","scrollTop","scrollHeight","current","storedUserData","localStorage","getItem","JSON","parse","handleReceiveMessage","isMessageAlreadyExists","some","item","on","off","className","children","src","other","pic","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","ref","map","i","isMyMessage","sender","messageContainerClass","createdAt","type","placeholder","onChange","onKeyPress","key","keyCode","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/mychat/MyChat.jsx"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport './mychat.css'\nimport axios from 'axios';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\n\n\nconst MyChat = ({userData,selectedChat, setSelectedChat,chats,setChats,user,socket, chatId}) => {\n  const [loggedUser, setLoggedUser] = useState([])\n  const [inputMsg, setInputMsg] = useState(\"\")\n  const [message, setMessage] = useState({ data: [] });\n  const [dropDown, setdropDown] = useState(false)\n  const [profileCheck, setProfileCheck] = useState(false)\n  // const [socketConnected, setSocketConnected] = useState(false)\n\n  \n  let selectedChatCompare\n  \n\n  const chatBodyRef = useRef();\n  // console.log(\"I dont want this\",user)\n  const myUser = user\n  // console.log(\"myUser\",myUser)\n//  console.log(\"fetche message\",message)\n// console.log(\"data:\",userData, selectedChat, chats, user,socket,chatId)\n\nconst handleSubmit = (event) =>{\n  setInputMsg(event.target.value)\n  console.log(\"handleSubmt\",message)\n}\n\nconst handleProfile = () => {\n  setProfileCheck(!profileCheck)\n}\n const fetchMessages = async() => {\n  try {\n    const config ={\n      headers: {\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n\n    const response = await axios.get(`http://localhost:8080/message/${selectedChat._id}`, config);\n    const responseData = response.data;\n\n    // console.log(\"this is the message I want\", responseData);\n\n    setMessage({ data: responseData });\n    // console.log(\"responseData:\",responseData)\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst fetchChats = async () => {\n  console.log(\"user\",myUser)\n  try {\n    const config ={\n      headers: {\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n\n    const data = await axios.get(\"http://localhost:8080/chat/one\",config)\n    setChats(data)\n    // console.log(\"this is the chat I want\",data)\n  }catch(err) {\n    console.log(err)\n  }\n}\n\n\nconst sendMessage = async () => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\",\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n    setInputMsg(\"\")\n    const {data} = await axios.post(\n      \"http://localhost:8080/message\",\n      {\n        content:inputMsg,\n        chatId: selectedChat._id,\n      },\n      config\n    )\n\n    // console.log(\"this is msg\",data)\n    \n\n  // Update the state using the current state\n  await socket.emit(\"new_message\",data)\n  setMessage((prevState) => {\n    return {\n      data: [...prevState.data, data],\n    };\n  });\n  \n  }catch(err) {\n    \n  }\n}\n  \nuseEffect(()=> {\n  fetchMessages()\n  // console.log(\"useEffect set message\",message)\n  \n},[selectedChat])\n\nuseEffect(() => {\n  const chatBody = document.getElementById('chat-body');\n  if (chatBody) {\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }\n}, [message.data]);\n\n\nuseEffect(() => {\n  chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n});\n\n\n\nuseEffect(()=> {\n  const storedUserData = localStorage.getItem('userData');\n  if (storedUserData) {\n    // console.log(\"hi\",storedUserData)\n    // console.log(\"hello\",JSON.parse(storedUserData))\n    setLoggedUser(JSON.parse(storedUserData));\n  }\n  fetchChats()\n  selectedChatCompare = selectedChat\n},[selectedChat])\n\nuseEffect(() => {\n  const handleReceiveMessage = (data) => {\n    const isMessageAlreadyExists = message.data.some((item) => item._id === data._id);\n\n    if (!isMessageAlreadyExists) {\n      setMessage((prevState) => {\n        return {\n          data: [...prevState.data, data],\n        };\n      });\n    }\n  };\n\n  socket.on(\"receive_message\", handleReceiveMessage);\n\n  // Clean up the event listener when the component unmounts\n  return () => {\n    socket.off(\"receive_message\", handleReceiveMessage);\n  };\n}, [socket]);\n\n  \n  console.log(\"logged user\",loggedUser)\n  return (\n    <div className='chat-left'>\n      <div className='left-container'>\n        <div className='right-container-navbar'>\n          <div className='nav-container'>\n            <div className='profile'>\n              <div className='nav-profile-pic'>\n                <img src={userData.other.pic} alt=\"default\" />\n              </div>\n              <div className='selected-user-name'>\n              \n                <h3>{myUser.username}</h3>\n              \n              </div>\n              \n            </div>\n            <div className='group-others'>\n              <div className='group-icons'>\n                {/* <GroupsIcon className =\"grpicons\"/> */}\n                <MoreVertIcon className='grpicons' onClick={()=> setdropDown(!dropDown)}/>\n                    {\n                      dropDown && (\n                        <div className='dropdown'>\n                          <div className='dropBtn' onClick={handleProfile}>\n                            profile\n                          </div>\n                        </div>\n                      )\n                    }\n                \n                \n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='chat-body' ref={chatBodyRef}>\n          {console.log(message.data)}\n        {message.data && message.data.map((item, i) => {\n          const isMyMessage = item.sender._id === userData.other._id;\n          const messageContainerClass = isMyMessage ? 'message right-message' : 'message left-message';\n\n          return (\n            <div className={messageContainerClass} key={i}>\n              {/* id={username === item.author ?\"you\":\"other\"} */}\n              <div className=\"message-container\">\n                <div className='message-content'>\n                  <p>{item.content}</p>\n                </div>\n                <div className='message-meta'>\n                  <div className='time'>{item.createdAt}</div> {/* Assuming you have a createdAt property */}\n                  <div className='authors'>{item.sender.username}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n                 \n      </div>\n      <div className=\"chat-footer\">\n        <div className='chat-footer-container'>\n            <input type=\"text\" placeholder='Hey...'\n            value={inputMsg}\n            onChange={(event)=> {\n              handleSubmit(event)\n            }}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\" || event.keyCode === 13) {\n                sendMessage()\n              }\n            }}\n            />\n        </div>  \n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MyChat\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}