{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapp/chatapplication-master/client/src/component/chatpage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../pages/auth.css';\nimport './chatpage.css';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport io from 'socket.io-client';\nimport BinaryImage from '../BinaryImage';\nimport GrpChat from '../groupChat/GrpChat';\n// import { set } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:9002\");\nconst ChatPage = ({\n  userData,\n  handleLogout,\n  backendPath\n}) => {\n  _s();\n  const [dropDown, setdropDown] = useState(false);\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult, setSearchResult] = useState([]);\n  const [error, setError] = useState(null);\n  const [loding, setLoding] = useState();\n  const [selectedChat, setSelectedChat] = useState([]);\n  const [otherUser, setOtherUser] = useState([]);\n  const [personChat, setPersonChat] = useState(localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([]);\n  const [newchat, setNewChat] = useState([]);\n  const [profileCheck, setProfileCheck] = useState(false);\n  const [logedUserProfilecheck, setLogedUserProfilecheck] = useState(false);\n  const [group, setGroup] = useState(false);\n  const [groupName, setGroupName] = useState(\"\");\n\n  // console.log(\"first\",userData)\n  const handleProfile = () => {\n    setProfileCheck(true);\n  };\n  const handleLogedProfile = () => {\n    setLogedUserProfilecheck(false);\n    setdropDown(false);\n  };\n  const handleSearchKeyPress = e => {\n    if (e.key === 'Enter' && search.trim() !== \"\") {\n      // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    } else {\n      setSearchResult([]);\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      // console.log(\"accessToken\",userData.accessToken)\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      setLoding(true);\n      // console.log(\"this is the data I want to fetch\")\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/user?search=${search}`, config);\n      // console.log(\"data\")\n      // console.log(\"search data\",data)\n      setLoding(false);\n      setSearchResult(data);\n      localStorage.setItem('search', search);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  };\n  // console.log(\"userData\", userData)\n\n  const joinRoom = chat => {\n    // console.log(\"join room\",chat._id)\n    if (chat._id !== \"\") {\n      socket.emit(\"join_room\", chat._id);\n    }\n  };\n  const accessChat = async itemData => {\n    // console.log(\"this is userId\", userId);\n    // console.log(chats)\n    let userId = itemData._id;\n    console.log(\"id\", userId);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      // console.log(userData.accessToken);\n      if (itemData.isGroupChat) {\n        console.log(\"it is grp chat official\");\n        const existingChat = newchat.find(chat => chat.users.some(user => user._id === userId));\n        console.log(existingChat);\n        if (!existingChat) {\n          console.log(\"this is group chat\", userId);\n          const {\n            data\n          } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/chat/group/${userId}`, config);\n          // console.log(\"chats data:\", data)\n\n          setNewChat([...newchat, data]);\n          setSelectedChat(data); // Set the new chat as the selected chat\n          setOtherUser(data);\n          console.log(\"this is selected group User:\", data);\n        } else {\n          console.log(\"if existing user already parsent\");\n          setSelectedChat(existingChat);\n          setOtherUser(existingChat);\n          console.log(\"this is group chat which is already parsent in selectedchats:\", existingChat);\n        }\n      } else {\n        let dataId = itemData._id;\n        console.log(\"this is not a grp chat\", newchat);\n        const existingChat = newchat.find(chat => chat.users.some(user => user._id === dataId));\n        console.log(existingChat, itemData, \"this is already parsent\");\n        console.log(existingChat, dataId, \"this is already parsent\");\n        if (!existingChat) {\n          console.log(userId);\n          const {\n            data\n          } = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/chat/one`, {\n            userId\n          }, config);\n          // console.log(\"chats data:\", data)\n\n          setNewChat([...newchat, data]);\n          setSelectedChat(data); // Set the new chat as the selected chat\n          const namiUser = data.users.find(user => user._id === userId);\n          if (namiUser) {\n            setOtherUser(namiUser);\n            console.log(\"Nami's data:\", namiUser);\n          } else {\n            console.log(\"Nami not found in the users array.\");\n          }\n        } else {\n          console.log(\"already parsent\");\n          setSelectedChat(existingChat);\n          const namiUser = existingChat.users.find(user => user._id === userId);\n          console.log(namiUser);\n          if (namiUser) {\n            setOtherUser(namiUser);\n            console.log(\"Nami's data:\", namiUser);\n          } else {\n            console.log(\"Nami not found in the users array.\");\n          }\n        }\n      }\n      // console.log(\"existingChat\", existingChat);\n      setPersonChat(true);\n    } catch (err) {\n      setError('An error occurred');\n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    // console.log(\"selected chat\", selectedChat);\n    // console.log(\"this is other user\", otherUser)\n    joinRoom(selectedChat);\n  }, [selectedChat]);\n  useEffect(() => {\n    handleUsers();\n  }, [search]);\n  useEffect(() => {\n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n  useEffect(() => {\n    const storedPersonChat = localStorage.getItem('personChat');\n    // console.log(\"storePersonChat\",storedPersonChat)\n    if (storedPersonChat) {\n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n  useEffect(() => {\n    if (!search) {\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`\n            }\n          };\n          const chatResponse = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/chat/one`, config);\n          const chatData = chatResponse.data;\n          // console.log(\"chatData from chat Response\",chatData)\n\n          const chatsWithLastMessages = [];\n          for (const chat of chatData) {\n            const chatMessagesUrl = `${process.env.REACT_APP_API_BASE_URL}/message/${chat._id}`;\n            const messageResponse = await axios.get(chatMessagesUrl, config);\n            // console.log(`this is messageResponse`,messageResponse)\n            const messageData = messageResponse.data;\n            // console.log(\"this is messageData\",messageData)\n            // console.log(\"this is messageData\",messageData)\n\n            if (messageData.length > 0) {\n              chatsWithLastMessages.push(chat);\n            }\n          }\n          const usersNotMatchingId = chatsWithLastMessages.flatMap(chat => chat.users.filter(user => user._id !== userData.other._id));\n          console.log(\"this is userNotMatchingId\", usersNotMatchingId);\n          const fetchChatsData = await fetchChats();\n          console.log(\"this is fetchChatsData\", fetchChatsData);\n\n          // const array = Array.from(new Set(usersNotMatchingId.map(obj => obj.id))).map(id => {\n          //   return usersNotMatchingId.find(obj => obj.id === id);\n          // });\n\n          // console.log(array)\n          // const removeDuplicate =Array.from(new Set(array.map(obj => obj.id))).map(id => {\n          //   return array.find(obj => obj.id === id);\n          // });\n\n          const uniqueObjects = [];\n          const seenUsernames = new Set();\n          for (const obj of usersNotMatchingId) {\n            if (!seenUsernames.has(obj.email)) {\n              seenUsernames.add(obj.email);\n              uniqueObjects.push(obj);\n            }\n          }\n          console.log(uniqueObjects);\n          setWithoutSearchRslt([...uniqueObjects, ...fetchChatsData]);\n          // setWithoutSearchRslt((prevData) => [...prevData, ...filteredChats]);\n        } catch (error) {\n          console.error('Error fetching chats with last messages:', error);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt]);\n  const [selecteUserForGroup, setSelecteUserForGroup] = useState([]);\n  const [changeState, setChangeState] = useState(false);\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/chat/one`, config);\n      if (response.status === 200) {\n        const allChats = response.data;\n        // Now you have all the chats including group and single chats in 'allChats' array.\n        // You can proceed to filter the group chats and check if 'userData.other._id' is included in 'chat.users'.\n        const groupChats = allChats.filter(chat => chat.isGroupChat);\n        const filteredChats = groupChats.filter(chat => chat.users.some(user => user._id === userData.other._id));\n\n        // 'filteredChats' now contains all group chats where 'userData.other._id' is included.\n        // You can update your state (e.g., setWithoutSearchRslt) with this filtered result.\n        // console.log(\"filter chats\",filteredChats)\n        return filteredChats;\n        // setWithoutSearchRslt((prevData) => [...prevData, ...filteredChats]);\n      }\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n      setError('An error occurred while fetching chats.');\n    }\n  };\n  const handleSelecteUserForGroup = item => {\n    const existingUserInSelected = selecteUserForGroup.find(user => user._id === item._id);\n    if (!existingUserInSelected) {\n      setSelecteUserForGroup(prevSelectedUsers => [...prevSelectedUsers, item]);\n    } else {\n      console.log(\"already parsent\");\n    }\n  };\n  const handleCreateGroupChat = async () => {\n    try {\n      if (groupName.trim() !== '' && selecteUserForGroup.length >= 2) {\n        // Create the group chat configuration\n        const groupChatConfig = {\n          chatName: groupName,\n          users: selecteUserForGroup.map(user => user._id)\n        };\n\n        // Set the request headers with the user authentication token\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userData.accessToken}`,\n            'Content-Type': 'application/json'\n          }\n        };\n\n        // Make an API call to create the group chat using Axios\n        const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/chat/group`, groupChatConfig, config);\n        if (response.status === 201 || response.status === 200) {\n          // Handle success, e.g., show a success message or redirect to the created group chat\n          // console.log('Group chat created successfully',response);\n          // setError(false)\n          setSelecteUserForGroup([]);\n          setSearchResult([]);\n          setGroupName('');\n          setSearch(\"\");\n          setGroup(false);\n          setChangeState(!changeState);\n        } else {\n          // Handle other status codes as needed\n          console.error('Failed to create group chat');\n        }\n      } else {\n        // Handle the case where the group name is empty or there are not enough selected users\n        console.log('Group name is empty or not enough selected users');\n      }\n    } catch (error) {\n      console.log(\"these is some error\", error);\n    }\n  };\n  const handleResetAllThings = () => {\n    setGroupName(\"\");\n    setSearch(\"\");\n    setGroup(false);\n  };\n  const handleRemoveSelecteUser = userToRemove => {\n    const updatedSelectedUsers = selecteUserForGroup.filter(user => user._id !== userToRemove._id);\n    setSelecteUserForGroup(updatedSelectedUsers);\n  };\n  useEffect(() => {\n    try {} catch (error) {\n      console.log(\"this is the error\", error);\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatpage\",\n    children: [group && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetButton\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: handleResetAllThings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupContainerHeading\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Group chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupNameAndSearch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: groupName,\n            onChange: e => setGroupName(e.target.value),\n            placeholder: \"group name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"groupSearchSelected\",\n            children: selecteUserForGroup.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"groupSearchSelectedItem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  onClick: () => handleRemoveSelecteUser(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupSearchResult\",\n          children: searchResult.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-item\",\n            onClick: () => handleSelecteUserForGroup(item),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-item-profile\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-profile-pic\",\n                children: /*#__PURE__*/_jsxDEV(BinaryImage, {\n                  contentType: item.pic.contentType,\n                  data: item.pic.data.data,\n                  i: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-item-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-item-identity\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lattest-msg\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"you: this is your messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 25\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createGroupChatButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateGroupChat,\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }, this), profileCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkUserProfile\",\n      onClick: () => setProfileCheck(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkUserProfileContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfilePic\",\n          children: /*#__PURE__*/_jsxDEV(BinaryImage, {\n            contentType: otherUser.pic.contentType,\n            data: otherUser.pic.data.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfileName\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: otherUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfileEmail\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: otherUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), logedUserProfilecheck && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkUserProfile\",\n      onClick: handleLogedProfile,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkUserProfileContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfilePic\",\n          children: /*#__PURE__*/_jsxDEV(BinaryImage, {\n            contentType: userData.other.pic.contentType,\n            data: userData.other.pic.data.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfileName\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: userData.other.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkUserProfileEmail\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userData.other.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-navbar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-profile-pic\",\n                  children: /*#__PURE__*/_jsxDEV(BinaryImage, {\n                    contentType: userData.other.pic.contentType,\n                    data: userData.other.pic.data.data\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-others\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-icons\",\n                  children: [/*#__PURE__*/_jsxDEV(GroupsIcon, {\n                    className: \"grpicons\",\n                    onClick: () => setGroup(true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                    className: \"grpicons\",\n                    onClick: () => setdropDown(!dropDown)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 21\n                  }, this), dropDown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      onClick: () => setLogedUserProfilecheck(true),\n                      children: \"My Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropBtn\",\n                      onClick: () => handleLogout(personChat, setPersonChat),\n                      children: \"Log out\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-search-box\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-container\",\n              children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n                className: \"search-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: search,\n                onChange: e => setSearch(e.target.value),\n                onKeyPress: handleSearchKeyPress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"search-user-button\",\n                onClick: handleUsers,\n                children: \"Go\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-container-user-list\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-container\",\n              children: loding ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-list-item\",\n                  children: [console.log(withoutSaerchRslt), !search ? withoutSaerchRslt.map((item, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item\",\n                      onClick: () => accessChat(item),\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item-profile\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"item-profile-pic\",\n                          children: item.pic && /*#__PURE__*/_jsxDEV(BinaryImage, {\n                            contentType: item.pic.contentType,\n                            data: item.pic.data.data\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 572,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item-data\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user-item-identity\",\n                          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                            children: item.username ? item.username : item.chatName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 580,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 579,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"lattest-msg\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: item.isGroupChat ? `this is groupchat` : `you: this is your messages`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 584,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 583,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 578,\n                        columnNumber: 33\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 33\n                    }, this);\n                  }) : searchResult.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-item\",\n                    onClick: () => accessChat(item),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-profile\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"item-profile-pic\",\n                        children: /*#__PURE__*/_jsxDEV(BinaryImage, {\n                          contentType: item.pic.contentType,\n                          data: item.pic.data.data,\n                          i: i\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 597,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-item-data\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-item-identity\",\n                        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: item.username\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 602,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 601,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"lattest-msg\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"you: this is your messages\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 605,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 35\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 33\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container-left\",\n        children: [console.log(\"check if selected chat is groupChat\", selectedChat.isGroupChat), personChat ? selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(GrpChat, {\n          socket: socket,\n          userData: userData,\n          selectedChat: selectedChat,\n          user: otherUser,\n          handleProfile: handleProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(MyChat, {\n          backendPath: backendPath,\n          userData: userData,\n          selectedChat: selectedChat,\n          setSelectedChat: setSelectedChat,\n          socket: socket,\n          user: otherUser,\n          handleProfile: handleProfile,\n          profileCheck: profileCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsapp-home\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-container-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-icon\",\n                children: /*#__PURE__*/_jsxDEV(WhatsAppIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-container-para\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"WhatsApp Web\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"home-whatsapp-title\",\n                  children: [\"Send and receive messages without keeping your phone online.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 120\n                  }, this), \"Use WhatsApp on up to 4 linked devices and 1 phone at the same time.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"3ZhefDlqGMtB4mI3xZWmJctXIH0=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","WhatsAppIcon","GroupsIcon","MoreVertIcon","SearchIcon","axios","MyChat","CloseIcon","io","BinaryImage","GrpChat","jsxDEV","_jsxDEV","socket","connect","ChatPage","userData","handleLogout","backendPath","_s","dropDown","setdropDown","search","setSearch","localStorage","getItem","searchResult","setSearchResult","error","setError","loding","setLoding","selectedChat","setSelectedChat","otherUser","setOtherUser","personChat","setPersonChat","withoutSaerchRslt","setWithoutSearchRslt","newchat","setNewChat","profileCheck","setProfileCheck","logedUserProfilecheck","setLogedUserProfilecheck","group","setGroup","groupName","setGroupName","handleProfile","handleLogedProfile","handleSearchKeyPress","e","key","trim","handleUsers","removeItem","config","headers","Authorization","accessToken","data","get","process","env","REACT_APP_API_BASE_URL","setItem","err","console","joinRoom","chat","_id","emit","accessChat","itemData","userId","log","isGroupChat","existingChat","find","users","some","user","dataId","post","namiUser","JSON","stringify","storedPersonChat","parse","fetchChatsWithLastMessages","chatResponse","chatData","chatsWithLastMessages","chatMessagesUrl","messageResponse","messageData","length","push","usersNotMatchingId","flatMap","filter","other","fetchChatsData","fetchChats","uniqueObjects","seenUsernames","Set","obj","has","email","add","selecteUserForGroup","setSelecteUserForGroup","changeState","setChangeState","response","status","allChats","groupChats","filteredChats","handleSelecteUserForGroup","item","existingUserInSelected","prevSelectedUsers","handleCreateGroupChat","groupChatConfig","chatName","map","handleResetAllThings","handleRemoveSelecteUser","userToRemove","updatedSelectedUsers","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","i","username","contentType","pic","onKeyPress","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapp/chatapplication-master/client/src/component/chatpage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../pages/auth.css'\nimport './chatpage.css'\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport MyChat from '../mychat/MyChat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport io from 'socket.io-client'\nimport BinaryImage from '../BinaryImage';\nimport GrpChat from '../groupChat/GrpChat';\n// import { set } from 'mongoose';\n\nconst socket = io.connect(\"http://localhost:9002\")\nconst ChatPage = ({userData,handleLogout,backendPath}) => {\n\n  const [dropDown, setdropDown] = useState(false)\n  const [search, setSearch] = useState(localStorage.getItem('search') || '');\n  const [searchResult,setSearchResult] = useState([])\n  const [error, setError] = useState(null); \n  const [loding, setLoding] = useState()\n  const [selectedChat, setSelectedChat] = useState([])\n  const [otherUser, setOtherUser] = useState([])\n  const [personChat, setPersonChat] = useState(\n    localStorage.getItem('personChat') === 'true' || false // Retrieve from localStorage\n  );\n  const [withoutSaerchRslt, setWithoutSearchRslt] = useState([])\n  const [newchat, setNewChat] = useState([])\n  const [profileCheck, setProfileCheck] = useState(false)\n  const [logedUserProfilecheck,setLogedUserProfilecheck] = useState(false)\n  const [group, setGroup] = useState(false)\n  const [groupName,setGroupName] = useState(\"\")\n\n  // console.log(\"first\",userData)\n  const handleProfile = () => {\n    setProfileCheck(true)\n  }\n\n  const handleLogedProfile =()=> {\n    setLogedUserProfilecheck(false)\n    setdropDown(false)\n  }\n  const handleSearchKeyPress = (e) => {\n    if (e.key === 'Enter' && search.trim() !== \"\") { // Check if search is not empty\n      handleUsers();\n      // console.log(\"search\", search);\n    }else {\n      setSearchResult([])\n    }\n  };\n  const handleUsers = async () => {\n    if (!search) {\n      // console.log(search)\n      setSearch('');\n      localStorage.removeItem('search'); // Clear search from localStorage\n      return; // Return early if search is empty\n    }\n\n    try {\n      // console.log(\"accessToken\",userData.accessToken)\n      const config = {\n          headers: {\n            Authorization :`Bearer ${userData.accessToken}`\n          }\n      }\n      setLoding(true)\n      // console.log(\"this is the data I want to fetch\")\n      const {data} = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/user?search=${search}`,config)\n      // console.log(\"data\")\n      // console.log(\"search data\",data)\n      setLoding(false)\n      setSearchResult(data)\n      localStorage.setItem('search', search);\n    }catch(err) {\n      console.error('Error during login:', err);\n      setError('An error occurred during login.');\n    }\n  }\n  // console.log(\"userData\", userData)\n  \n  const joinRoom =(chat)=> {\n    // console.log(\"join room\",chat._id)\n    if(chat._id !== \"\") {\n      socket.emit(\"join_room\",chat._id)\n    }\n    \n  }\n  const accessChat = async (itemData) => {\n    // console.log(\"this is userId\", userId);\n    // console.log(chats)\n    let userId = itemData._id\n    console.log(\"id\",userId)\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`,\n        },\n      };\n      // console.log(userData.accessToken);\n      if(itemData.isGroupChat) {\n        console.log(\"it is grp chat official\")\n        const existingChat = newchat.find((chat) =>chat.users.some((user) => user._id === userId));\n        console.log(existingChat)\n        if(!existingChat) {\n          console.log(\"this is group chat\",userId)\n          const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/chat/group/${userId}`, config);\n          // console.log(\"chats data:\", data)\n        \n          setNewChat([...newchat,data])\n          \n          setSelectedChat(data);// Set the new chat as the selected chat\n          setOtherUser(data)\n          console.log(\"this is selected group User:\",data)\n        }else {\n          console.log(\"if existing user already parsent\")\n          setSelectedChat(existingChat);\n          setOtherUser(existingChat)\n\n          console.log(\"this is group chat which is already parsent in selectedchats:\",existingChat)\n        }\n      }else {\n        let dataId = itemData._id\n        console.log(\"this is not a grp chat\",newchat)\n\n        const existingChat = newchat.find((chat) =>chat.users.some((user) => user._id === dataId));\n        console.log(existingChat,itemData,\"this is already parsent\")\n        \n        console.log(existingChat,dataId,\"this is already parsent\")\n        if(!existingChat) {\n          console.log(userId)\n            const { data } = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/chat/one`, { userId }, config);\n            // console.log(\"chats data:\", data)\n\n            setNewChat([...newchat,data])\n            \n            setSelectedChat(data);// Set the new chat as the selected chat\n            const namiUser = data.users.find(user => user._id === userId);\n\n            if (namiUser) {\n                setOtherUser(namiUser)\n                console.log(\"Nami's data:\", namiUser);\n            } else {\n                console.log(\"Nami not found in the users array.\");\n            }\n        }else {\n          console.log(\"already parsent\")\n          setSelectedChat(existingChat);\n          const namiUser = existingChat.users.find(user => user._id === userId);\n          console.log(namiUser)\n          if (namiUser) {\n              setOtherUser(namiUser)\n              console.log(\"Nami's data:\", namiUser);\n          } else {\n              console.log(\"Nami not found in the users array.\");\n          }\n        }\n      }\n      // console.log(\"existingChat\", existingChat);\n      setPersonChat(true);\n  \n      \n    } catch (err) {\n      \n      setError('An error occurred');\n  \n      \n      setPersonChat(false);\n    }\n  };\n  useEffect(() => {\n    // console.log(\"selected chat\", selectedChat);\n    // console.log(\"this is other user\", otherUser)\n    joinRoom(selectedChat)\n  }, [selectedChat]);\n  \n  useEffect(() => {\n   handleUsers()\n  }, [search]);\n\n  useEffect(() => {\n    \n    localStorage.setItem('personChat', JSON.stringify(personChat));\n  }, [personChat]);\n\n  useEffect(() => {\n    \n    const storedPersonChat = localStorage.getItem('personChat');\n    // console.log(\"storePersonChat\",storedPersonChat)\n    if (storedPersonChat) {\n      \n      setPersonChat(JSON.parse(storedPersonChat));\n    }\n  }, [personChat]);\n\n  \n  useEffect(() => {\n    if (!search) {\n      const fetchChatsWithLastMessages = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${userData.accessToken}`,\n            },\n          };\n  \n          \n          const chatResponse = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/chat/one`, config);\n          const chatData = chatResponse.data;\n          // console.log(\"chatData from chat Response\",chatData)\n          \n          const chatsWithLastMessages = [];\n  \n          \n          for (const chat of chatData) {\n            \n            const chatMessagesUrl = `${process.env.REACT_APP_API_BASE_URL}/message/${chat._id}`;\n  \n            \n            const messageResponse = await axios.get(chatMessagesUrl, config);\n            // console.log(`this is messageResponse`,messageResponse)\n            const messageData = messageResponse.data;\n            // console.log(\"this is messageData\",messageData)\n            // console.log(\"this is messageData\",messageData)\n            \n            if (messageData.length > 0) {\n              \n              chatsWithLastMessages.push(chat);\n            }\n          }\n\n          \n          const usersNotMatchingId = chatsWithLastMessages.flatMap((chat) =>\n            chat.users.filter((user) => user._id !== userData.other._id)\n          );\n\n         console.log(\"this is userNotMatchingId\",usersNotMatchingId)\n          const fetchChatsData =await fetchChats()\n          console.log(\"this is fetchChatsData\",fetchChatsData)\n          \n          // const array = Array.from(new Set(usersNotMatchingId.map(obj => obj.id))).map(id => {\n          //   return usersNotMatchingId.find(obj => obj.id === id);\n          // });\n\n          // console.log(array)\n          // const removeDuplicate =Array.from(new Set(array.map(obj => obj.id))).map(id => {\n          //   return array.find(obj => obj.id === id);\n          // });\n\n          const uniqueObjects = [];\n          const seenUsernames = new Set();\n\n          for (const obj of usersNotMatchingId) {\n            if (!seenUsernames.has(obj.email)) {\n              seenUsernames.add(obj.email);\n              uniqueObjects.push(obj);\n            }\n          }\n\n          console.log(uniqueObjects);\n          \n          setWithoutSearchRslt([...uniqueObjects,...fetchChatsData]);\n          // setWithoutSearchRslt((prevData) => [...prevData, ...filteredChats]);\n        } catch (error) {\n          console.error('Error fetching chats with last messages:', error);\n          setError('An error occurred while fetching chats.');\n        }\n      };\n  \n      \n      fetchChatsWithLastMessages();\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt]);\n\n  const [selecteUserForGroup, setSelecteUserForGroup] = useState([]) \n  const [changeState, setChangeState] = useState(false)\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`,\n        },\n      };\n  \n      const response = await axios.get(\n        `${process.env.REACT_APP_API_BASE_URL}/chat/one`,\n        config\n      );\n  \n      if (response.status === 200) {\n        const allChats = response.data;\n        // Now you have all the chats including group and single chats in 'allChats' array.\n        // You can proceed to filter the group chats and check if 'userData.other._id' is included in 'chat.users'.\n        const groupChats = allChats.filter((chat) => chat.isGroupChat);\n        \n        const filteredChats = groupChats.filter((chat) =>\n          chat.users.some((user) => user._id === userData.other._id)\n        );\n  \n        // 'filteredChats' now contains all group chats where 'userData.other._id' is included.\n        // You can update your state (e.g., setWithoutSearchRslt) with this filtered result.\n        // console.log(\"filter chats\",filteredChats)\n        return filteredChats\n        // setWithoutSearchRslt((prevData) => [...prevData, ...filteredChats]);\n      }\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n      setError('An error occurred while fetching chats.');\n    }\n  };\n  const handleSelecteUserForGroup =(item)=> {\n    const existingUserInSelected = selecteUserForGroup.find((user) => user._id === item._id)\n\n    if(!existingUserInSelected) {\n      setSelecteUserForGroup((prevSelectedUsers) => [...prevSelectedUsers, item]);  \n    }else {\n      console.log(\"already parsent\")\n    }\n  }\n\n  const handleCreateGroupChat =async()=> {\n    try {\n      if (groupName.trim() !== '' && selecteUserForGroup.length >= 2) {\n        // Create the group chat configuration\n        const groupChatConfig = {\n          chatName: groupName,\n          users: selecteUserForGroup.map(user => user._id),\n        };\n  \n        // Set the request headers with the user authentication token\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userData.accessToken}`,\n            'Content-Type': 'application/json',\n          },\n        };\n  \n        // Make an API call to create the group chat using Axios\n        const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/chat/group`, groupChatConfig, config);\n  \n        if (response.status === 201 || response.status === 200) {\n          // Handle success, e.g., show a success message or redirect to the created group chat\n          // console.log('Group chat created successfully',response);\n          // setError(false)\n          setSelecteUserForGroup([]);\n          setSearchResult([]);\n          setGroupName('');\n          setSearch(\"\")\n          setGroup(false)\n          setChangeState(!changeState)\n        } else {\n          // Handle other status codes as needed\n          console.error('Failed to create group chat');\n        }\n\n        \n      } else {\n        // Handle the case where the group name is empty or there are not enough selected users\n        console.log('Group name is empty or not enough selected users');\n      }\n    }catch(error) {\n      console.log(\"these is some error\",error)\n    }\n  }\n  const handleResetAllThings =()=> {\n    setGroupName(\"\")\n    setSearch(\"\")\n    setGroup(false)\n  }\n  const handleRemoveSelecteUser = (userToRemove) => {\n    const updatedSelectedUsers = selecteUserForGroup.filter((user) => user._id !== userToRemove._id);\n    setSelecteUserForGroup(updatedSelectedUsers);\n  };\n\n  useEffect(()=> {\n    try{\n\n    }catch(error) {\n      console.log(\"this is the error\",error)\n    }\n  }, [search, userData.accessToken, setWithoutSearchRslt])\n  return (\n    \n    <div className='chatpage'>\n      {\n        group && \n          <div className='group'>\n              <div className='groupContainer'>\n                <div className='resetButton'>\n                <CloseIcon onClick={handleResetAllThings}/>\n                </div>\n                <div className='groupContainerHeading'>\n                  <h3>Create Group chat</h3>\n                </div>\n                <div className='groupNameAndSearch'>\n                  <input type=\"text\" value={groupName} onChange={(e) => setGroupName(e.target.value)} placeholder='group name'/>\n                \n                  <div className='groupSearchSelected'>\n                   {\n                      selecteUserForGroup.map((item,i)=> {\n                        return (\n                          <div className='groupSearchSelectedItem'>\n                            <p>{item.username}</p>\n                            <CloseIcon onClick={()=>handleRemoveSelecteUser(item)}/>\n                          </div>\n                        )\n                      })\n                   } \n                   \n                  </div>\n                  \n                \n                  \n                \n                  <input type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)} placeholder='search'/>\n                </div>\n                <div className='groupSearchResult'>\n                  {\n                    searchResult.map((item,i)=> (\n                      <div className='user-item' key={i} onClick={()=>handleSelecteUserForGroup(item)}>\n                        <div className='user-item-profile'>\n                          <div className='item-profile-pic'>\n                            {/* <img src={`data:${item.pic.contentType};base64,${btoa(String.fromCharCode.apply(null, item.pic.data.data))}`} alt=\"Profile Pic\" /> */}\n                            <BinaryImage contentType={item.pic.contentType} data={item.pic.data.data} i={i}/>\n                          </div>\n                        </div>\n                        <div className='user-item-data'>\n                          <div className='user-item-identity'>\n                            <h3>{item.username}</h3>\n                          </div>\n                          <div className='lattest-msg'>\n                            <p>you: this is your messages</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  }\n                </div>\n                <div className='createGroupChatButton'>\n                  <button onClick={handleCreateGroupChat}>\n                    Create Chat\n                  </button>\n                </div>\n            </div>\n          </div>\n      }\n      {\n          profileCheck && (\n            <div className=\"checkUserProfile\" onClick={()=> setProfileCheck(false)}>\n              <div className='checkUserProfileContainer'>\n                <div className='checkUserProfilePic'>\n                  {/* <img src={backendPath + otherUser.pic} alt=\"\" /> */}\n                  {/* <img\n                    src={`data:${otherUser.pic.contentType};base64,${otherUser.pic.data}`}\n                    alt=\"Profile Pic\"\n                  /> */}\n\n                  <BinaryImage contentType={otherUser.pic.contentType} data={otherUser.pic.data.data} />\n                </div>\n                <div className='checkUserProfileName'>\n                  <h2>{otherUser.username}</h2>\n                </div>\n                <div className='checkUserProfileEmail'>\n                  <p>{otherUser.email}</p>\n                </div>\n              </div>\n            </div>\n          )\n        }\n\n        {\n          logedUserProfilecheck && (\n            <div className=\"checkUserProfile\" onClick={handleLogedProfile}>\n              <div className='checkUserProfileContainer'>\n                <div className='checkUserProfilePic'>\n                  {/* <img src={backendPath + userData.other.pic} alt=\"\" /> */}\n                  {/* <img\n                    src={`data:${userData.other.pic.contentType};base64,${userData.other.pic.data}`}\n                    alt=\"Profile Pic\"\n                  /> */}\n                  <BinaryImage contentType={userData.other.pic.contentType} data={userData.other.pic.data.data} />\n                </div>\n                <div className='checkUserProfileName'>\n                  <h2>{userData.other.username}</h2>\n                </div>\n                <div className='checkUserProfileEmail'>\n                  <p>{userData.other.email}</p>\n                </div>\n              </div>\n            </div>\n          )\n        }         \n      <div className='chat-container'>\n        \n        \n        <div className='chat-right'>\n          <div className='right-container'>\n            <div className='right-container-navbar'>\n              <div className='nav-container'>\n                <div className='profile'>\n                  <div className='nav-profile-pic'>\n                    {/* <img src={`${backendPath}${userData.other.pic}`} alt=\"default\" /> */}\n                    {/* {console.log(\"this is for login user\",userData.other.pic.contentType, userData.other.pic.data)} */}\n                    {/* <img\n                      src={`data:${userData.other.pic.contentType};base64,${userData.other.pic.data}`}\n                      alt=\"Profile Pic\"\n                    /> */}\n                    <BinaryImage contentType={userData.other.pic.contentType} data={userData.other.pic.data.data} />\n                  </div>\n                </div>\n                <div className='group-others'>\n                  <div className='group-icons'>\n                    <GroupsIcon className =\"grpicons\" onClick={()=> setGroup(true)}/>\n                    <MoreVertIcon className='grpicons' onClick={()=> setdropDown(!dropDown)}/>\n                    {\n                      dropDown && (\n                        <div className='dropdown'>\n                          <div className='dropBtn' onClick={()=>setLogedUserProfilecheck(true)}>\n                            My Profile\n                          </div>\n                          <div className='dropBtn' onClick={()=>handleLogout(personChat,setPersonChat)}>\n                            Log out\n                          </div>\n                        </div>\n                      )\n                    }\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='right-search-box'>\n                {error && <p className=\"error-message\">{error}</p>}\n                <div className='search-container'>\n                  <SearchIcon className='search-icon'/>\n                  <input type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}\n                    onKeyPress={handleSearchKeyPress}\n                  />\n                  <button className='search-user-button' onClick={handleUsers}>Go</button>\n                </div>\n            </div>\n            <div className='right-container-user-list'>\n              <div className='list-container'>\n                    {/* {console.log(\"withoutSaerchRslt\",withoutSaerchRslt)} */}\n                  {\n                    loding ? (\n                      <div>Loding</div>\n                    ): (\n                      <div className='user-list-container'>\n                        <div className='user-list-item'>\n                          {console.log(withoutSaerchRslt)}\n                          {\n                            \n                            !search ? (\n                              \n                              withoutSaerchRslt.map((item, i) => {\n                                \n                               return (\n                              \n                                <div className='user-item' key={i} onClick={() => accessChat(item)}>\n                                <div className='user-item-profile'>\n                                  <div className='item-profile-pic'>\n                                    {/* <img src={backendPath + item.pic} alt=\"default\" /> */}\n                                    {/* <img\n                                      src={`data:${item.pic.contentType};base64,${item.pic.data}`}\n                                      alt=\"Profile Pic\"\n                                    /> */}\n                                    {\n                                      item.pic && (\n                                        <BinaryImage contentType={item.pic.contentType} data={item.pic.data.data} />\n                                      )\n                                    }\n                                    \n                                  </div>\n                                </div>\n                                <div className='user-item-data'>\n                                  <div className='user-item-identity'>\n                                    <h3>{item.username ? item.username:item.chatName}</h3>\n                                    \n                                  </div>\n                                  <div className='lattest-msg'>\n                                    <p>{item.isGroupChat ? `this is groupchat`:`you: this is your messages`}</p>\n                                  </div>\n                                </div>\n                              </div>\n                              )}\n                              \n                              )\n                            ):(\n                              searchResult.map((item,i)=> (\n                                <div className='user-item' key={i} onClick={() => accessChat(item)}>\n                                  <div className='user-item-profile'>\n                                    <div className='item-profile-pic'>\n                                      {/* <img src={`data:${item.pic.contentType};base64,${btoa(String.fromCharCode.apply(null, item.pic.data.data))}`} alt=\"Profile Pic\" /> */}\n                                      <BinaryImage contentType={item.pic.contentType} data={item.pic.data.data} i={i}/>\n                                    </div>\n                                  </div>\n                                  <div className='user-item-data'>\n                                    <div className='user-item-identity'>\n                                      <h3>{item.username}</h3>\n                                    </div>\n                                    <div className='lattest-msg'>\n                                      <p>you: this is your messages</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              ))\n                            )\n\n                          }\n                        \n                          \n                        \n                        </div>\n                      </div>\n                      \n                    )\n                  }\n                  \n                  \n                \n              </div>\n            </div>\n            \n          </div>\n        </div>\n\n\n        <div className='chat-container-left'>\n          {console.log(\"check if selected chat is groupChat\",selectedChat.isGroupChat)}\n          {\n            personChat ? (\n              selectedChat.isGroupChat\n               ?\n              <GrpChat socket={socket} userData={userData} selectedChat={selectedChat} user={otherUser} handleProfile={handleProfile}/> \n              :\n              <MyChat backendPath ={backendPath} userData={userData} selectedChat={selectedChat} setSelectedChat={setSelectedChat}  socket={socket} user={otherUser} handleProfile={handleProfile} profileCheck={profileCheck}/>\n              \n            ):(\n              <div className='whatsapp-home'>\n                <div className='home-container'>\n                  <div className='home-container-box'>\n                    <div className='home-container-icon'>\n                      <WhatsAppIcon className='icon'/>\n                    </div>\n                    <div className='home-container-para'>\n                      <div>\n                        <h1>WhatsApp Web</h1>\n                      </div>\n                      <div className=\"home-whatsapp-title\">Send and receive messages without keeping your phone online.<br/>Use WhatsApp on up to 4 linked devices and 1 phone at the same time.</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n          \n        </div>  \n      </div>      \n    </div>\n  )\n}\n\nexport default ChatPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}