{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/mychat/MyChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport './mychat.css';\nimport axios from 'axios';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChat = ({\n  userData,\n  selectedChat,\n  setSelectedChat,\n  chats,\n  setChats,\n  user,\n  socket,\n  chatId\n}) => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState([]);\n  const [inputMsg, setInputMsg] = useState(\"\");\n  const [message, setMessage] = useState({\n    data: []\n  });\n  const [dropDown, setdropDown] = useState(false);\n  const [isRemoveMessage, setIsRemovemessage] = useState(false);\n  const [index, setIndex] = useState(0);\n  // const [socketConnected, setSocketConnected] = useState(false)\n\n  let selectedChatCompare;\n  const chatBodyRef = useRef();\n  // console.log(\"I dont want this\",user)\n  const myUser = user;\n  // console.log(\"myUser\",myUser)\n  //  console.log(\"fetche message\",message)\n  // console.log(\"data:\",userData, selectedChat, chats, user,socket,chatId)\n\n  const handleSubmit = event => {\n    setInputMsg(event.target.value);\n    console.log(\"handleSubmt\", message);\n  };\n  const handleRemoveMsg = async item => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      if (item.sender._id === userData.other._id) {\n        // Make a DELETE request to delete the message with the given messageId\n        await axios.delete(`http://localhost:8080/message/${item._id}`, config);\n\n        // If the delete request is successful, you can update your UI accordingly.\n        // For example, you can remove the deleted message from your messages state.\n\n        // Assuming you have a messages state that you want to update:\n        // const updatedMessages = messages.filter((message) => message._id !== messageId);\n        // setMessages(updatedMessages);\n        setMessage(prevState => {\n          return {\n            data: prevState.data.filter(message => message._id !== item._id)\n          };\n        });\n        console.log('Message deleted successfully.');\n      } else {\n        console.log(\"you are not allow to do that\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleContextMenu = (e, item, i) => {\n    e.preventDefault();\n    console.log(\"this is handlecontextMenu:\", item);\n    setIsRemovemessage(true);\n    setIndex(i);\n  };\n  const fetchMessages = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      const response = await axios.get(`http://localhost:8080/message/${selectedChat._id}`, config);\n      const responseData = response.data;\n\n      // console.log(\"this is the message I want\", responseData);\n\n      setMessage({\n        data: responseData\n      });\n      // console.log(\"responseData:\",responseData)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const fetchChats = async () => {\n    console.log(\"user\", myUser);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      const data = await axios.get(\"http://localhost:8080/chat/one\", config);\n      setChats(data);\n      // console.log(\"this is the chat I want\",data)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userData.accessToken}`\n        }\n      };\n      setInputMsg(\"\");\n      const {\n        data\n      } = await axios.post(\"http://localhost:8080/message\", {\n        content: inputMsg,\n        chatId: selectedChat._id\n      }, config);\n\n      // console.log(\"this is msg\",data)\n\n      // Update the state using the current state\n      await socket.emit(\"new_message\", data);\n      setMessage(prevState => {\n        return {\n          data: [...prevState.data, data]\n        };\n      });\n    } catch (err) {}\n  };\n  useEffect(() => {\n    fetchMessages();\n    // console.log(\"useEffect set message\",message)\n  }, [selectedChat]);\n  useEffect(() => {\n    const chatBody = document.getElementById('chat-body');\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  }, [message.data]);\n\n  // useEffect(() => {\n  //  handleRemoveMsg()\n  // });\n\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('userData');\n    if (storedUserData) {\n      // console.log(\"hi\",storedUserData)\n      // console.log(\"hello\",JSON.parse(storedUserData))\n      setLoggedUser(JSON.parse(storedUserData));\n    }\n    fetchChats();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      const isMessageAlreadyExists = message.data.some(item => item._id === data._id);\n      if (!isMessageAlreadyExists) {\n        setMessage(prevState => {\n          return {\n            data: [...prevState.data, data]\n          };\n        });\n      }\n    };\n    socket.on(\"receive_message\", handleReceiveMessage);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n    };\n  }, [socket]);\n  console.log(\"logged user\", loggedUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container-navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: [myUser.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-profile-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: myUser.pic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-user-name\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: myUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-others\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-icons\",\n              children: [myUser.length !== 0 && /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n                className: \"grpicons\",\n                onClick: () => setdropDown(!dropDown)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), dropDown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropBtn\",\n                  onClick: handleProfile,\n                  children: \"profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        ref: chatBodyRef,\n        children: message.data && message.data.map((item, i) => {\n          const isMyMessage = item.sender._id === userData.other._id;\n          const messageContainerClass = isMyMessage ? 'message right-message' : 'message left-message';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: messageContainerClass,\n            onContextMenu: e => handleContextMenu(e, item, i),\n            onClick: () => setIsRemovemessage(false),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time\",\n                    children: item.createdAt.substring(11, 16)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this), \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this), isRemoveMessage && index === i && item.sender._id === userData.other._id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdownRemove\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropBtn\",\n                    onClick: () => handleRemoveMsg(item),\n                    children: \"remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: myUser.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Hey...\",\n            value: inputMsg,\n            onChange: event => {\n              handleSubmit(event);\n            },\n            onKeyPress: event => {\n              if (event.key === \"Enter\" || event.keyCode === 13) {\n                sendMessage();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChat, \"P6RJGhqNCpp4iP4eQh3d2D2K6+g=\");\n_c = MyChat;\nexport default MyChat;\nvar _c;\n$RefreshReg$(_c, \"MyChat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","GroupsIcon","axios","ArrowForwardIosIcon","MoreVertIcon","jsxDEV","_jsxDEV","MyChat","userData","selectedChat","setSelectedChat","chats","setChats","user","socket","chatId","_s","loggedUser","setLoggedUser","inputMsg","setInputMsg","message","setMessage","data","dropDown","setdropDown","isRemoveMessage","setIsRemovemessage","index","setIndex","selectedChatCompare","chatBodyRef","myUser","handleSubmit","event","target","value","console","log","handleRemoveMsg","item","config","headers","Authorization","accessToken","sender","_id","other","delete","prevState","filter","err","handleContextMenu","e","i","preventDefault","fetchMessages","response","get","responseData","fetchChats","sendMessage","post","content","emit","chatBody","document","getElementById","scrollTop","scrollHeight","storedUserData","localStorage","getItem","JSON","parse","handleReceiveMessage","isMessageAlreadyExists","some","on","off","className","children","length","src","pic","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","handleProfile","ref","map","isMyMessage","messageContainerClass","onContextMenu","createdAt","substring","type","placeholder","onChange","onKeyPress","key","keyCode","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/mychat/MyChat.jsx"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport './mychat.css'\nimport axios from 'axios';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\n\n\nconst MyChat = ({userData,selectedChat, setSelectedChat,chats,setChats,user,socket, chatId}) => {\n  const [loggedUser, setLoggedUser] = useState([])\n  const [inputMsg, setInputMsg] = useState(\"\")\n  const [message, setMessage] = useState({ data: [] });\n  const [dropDown, setdropDown] = useState(false)\n  \n  const [isRemoveMessage, setIsRemovemessage] = useState(false)\n  const [index, setIndex] = useState(0)\n  // const [socketConnected, setSocketConnected] = useState(false)\n\n  \n  let selectedChatCompare\n  \n\n  const chatBodyRef = useRef();\n  // console.log(\"I dont want this\",user)\n  const myUser = user\n  // console.log(\"myUser\",myUser)\n//  console.log(\"fetche message\",message)\n// console.log(\"data:\",userData, selectedChat, chats, user,socket,chatId)\n\nconst handleSubmit = (event) =>{\n  setInputMsg(event.target.value)\n  console.log(\"handleSubmt\",message)\n\n}\n\nconst handleRemoveMsg = async(item) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userData.accessToken}`,\n      },\n    };\n\n    if(item.sender._id === userData.other._id) {\n      // Make a DELETE request to delete the message with the given messageId\n      await axios.delete(`http://localhost:8080/message/${item._id}`, config);\n\n      // If the delete request is successful, you can update your UI accordingly.\n      // For example, you can remove the deleted message from your messages state.\n\n      // Assuming you have a messages state that you want to update:\n      // const updatedMessages = messages.filter((message) => message._id !== messageId);\n      // setMessages(updatedMessages);\n      setMessage((prevState) => {\n        return {\n          data: prevState.data.filter((message) => message._id !== item._id),\n        };\n      });\n      console.log('Message deleted successfully.');\n    }else {\n      console.log(\"you are not allow to do that\")\n    }\n    \n  }catch(err) {\n    console.log(err)\n  }\n}\nconst handleContextMenu = (e,item,i) => {\n  e.preventDefault()\n  console.log(\"this is handlecontextMenu:\",item)\n  setIsRemovemessage(true)\n  setIndex(i)\n}\n\n const fetchMessages = async() => {\n  try {\n    const config ={\n      headers: {\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n\n    const response = await axios.get(`http://localhost:8080/message/${selectedChat._id}`, config);\n    const responseData = response.data;\n\n    // console.log(\"this is the message I want\", responseData);\n\n    setMessage({ data: responseData });\n    // console.log(\"responseData:\",responseData)\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst fetchChats = async () => {\n  console.log(\"user\",myUser)\n  try {\n    const config ={\n      headers: {\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n\n    const data = await axios.get(\"http://localhost:8080/chat/one\",config)\n    setChats(data)\n    // console.log(\"this is the chat I want\",data)\n  }catch(err) {\n    console.log(err)\n  }\n}\n\n\nconst sendMessage = async () => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\",\n        Authorization:`Bearer ${userData.accessToken}`\n      }\n    }\n    setInputMsg(\"\")\n    const {data} = await axios.post(\n      \"http://localhost:8080/message\",\n      {\n        content:inputMsg,\n        chatId: selectedChat._id,\n      },\n      config\n    )\n\n    // console.log(\"this is msg\",data)\n    \n\n  // Update the state using the current state\n  await socket.emit(\"new_message\",data)\n  setMessage((prevState) => {\n    return {\n      data: [...prevState.data, data],\n    };\n  });\n  \n  }catch(err) {\n    \n  }\n}\n  \nuseEffect(()=> {\n  fetchMessages()\n  // console.log(\"useEffect set message\",message)\n  \n},[selectedChat])\n\nuseEffect(() => {\n  const chatBody = document.getElementById('chat-body');\n  if (chatBody) {\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }\n}, [message.data]);\n\n\n// useEffect(() => {\n//  handleRemoveMsg()\n// });\n\n\n\nuseEffect(()=> {\n  const storedUserData = localStorage.getItem('userData');\n  if (storedUserData) {\n    // console.log(\"hi\",storedUserData)\n    // console.log(\"hello\",JSON.parse(storedUserData))\n    setLoggedUser(JSON.parse(storedUserData));\n  }\n  fetchChats()\n  selectedChatCompare = selectedChat\n},[selectedChat])\n\nuseEffect(() => {\n  const handleReceiveMessage = (data) => {\n    const isMessageAlreadyExists = message.data.some((item) => item._id === data._id);\n\n    if (!isMessageAlreadyExists) {\n      setMessage((prevState) => {\n        return {\n          data: [...prevState.data, data],\n        };\n      });\n    }\n  };\n\n  socket.on(\"receive_message\", handleReceiveMessage);\n\n  // Clean up the event listener when the component unmounts\n  return () => {\n    socket.off(\"receive_message\", handleReceiveMessage);\n  };\n}, [socket]);\n\n  \n  console.log(\"logged user\",loggedUser)\n  return (\n    <div className='chat-left'>\n      <div className='left-container'>\n        <div className='right-container-navbar'>\n          <div className='nav-container'>\n            <div className='profile'>\n              {\n                myUser.length !== 0 && (\n                  <div className='nav-profile-pic'>\n                    <img src={myUser.pic} />\n                  </div>\n                )\n                \n              }\n              \n              <div className='selected-user-name'>\n              \n                <h3>{myUser.username}</h3>\n              \n              </div>\n              \n            </div>\n            <div className='group-others'>\n              <div className='group-icons'>\n                {/* <GroupsIcon className =\"grpicons\"/> */}\n                {\n                myUser.length !== 0 && (\n                  <MoreVertIcon className='grpicons' onClick={()=> setdropDown(!dropDown)}/>\n                )\n                \n              }\n                \n                    {\n                      dropDown && (\n                        <div className='dropdown'>\n                          <div className='dropBtn' onClick={handleProfile}>\n                            profile\n                          </div>\n                        </div>\n                      )\n                    }\n                \n                \n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className='chat-body' ref={chatBodyRef}>\n          {/* {console.log(message.data)} */}\n        {message.data && message.data.map((item, i) => {\n          const isMyMessage = item.sender._id === userData.other._id;\n          const messageContainerClass = isMyMessage ? 'message right-message' : 'message left-message';\n\n          return (\n            <div className={messageContainerClass} key={i} onContextMenu={(e) => handleContextMenu(e, item,i)} onClick={() => setIsRemovemessage(false)}>\n              {/* id={username === item.author ?\"you\":\"other\"} */}\n              <div className=\"message-container\">\n                <div className='message-content'>\n                  <p>{item.content}</p>\n                  <div className='message-meta'>\n                    <div className='time'>{item.createdAt.substring(11, 16)}</div>  {/* Assuming you have a createdAt property */}\n                  </div>\n                  {\n                    isRemoveMessage && index === i && item.sender._id === userData.other._id && (\n                      <div className='dropdownRemove'>\n                        <div className='dropBtn' onClick={()=> handleRemoveMsg(item)}>\n                          remove\n                        </div>\n                      </div>\n                    )\n                  }  \n                </div>\n               \n              </div>\n            </div>\n            \n          );\n        })}\n        \n      </div>\n      <div className=\"chat-footer\">\n      {\n        myUser.length !== 0 && (\n          <div className='chat-footer-container'>\n            <input type=\"text\" placeholder='Hey...'\n            value={inputMsg}\n            onChange={(event)=> {\n              handleSubmit(event)\n            }}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\" || event.keyCode === 13) {\n                sendMessage()\n              }\n            }}\n            />\n        </div>  \n        )\n        \n      }\n        \n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MyChat\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}