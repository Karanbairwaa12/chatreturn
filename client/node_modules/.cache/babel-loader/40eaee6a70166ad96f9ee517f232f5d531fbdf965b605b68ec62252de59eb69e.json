{"ast":null,"code":"var _jsxFileName = \"/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/BinaryImage.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BinaryImage = ({\n  contentType,\n  data,\n  i\n}) => {\n  const _arrayBufferToBase64 = data => {\n    var binary = '';\n    var bytes = new Uint8Array(data);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  // Convert the binary data to a base64-encoded string\n  console.log(i, data);\n  // const base64String = btoa(String.fromCharCode(...new Uint8Array(data)));\n  // console.log(\"after\",base64String)\n  // Create the data URL\n  const dataURL = `data:${contentType};base64,${_arrayBufferToBase64(data)}`;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: dataURL,\n    alt: \"Profile Pic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = BinaryImage;\nexport default BinaryImage;\nvar _c;\n$RefreshReg$(_c, \"BinaryImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BinaryImage","contentType","data","i","_arrayBufferToBase64","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","window","btoa","console","log","dataURL","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/deeporian/36466FC6466F8609/libraryFolder/library-master/chatapplication/client/src/component/BinaryImage.jsx"],"sourcesContent":["import React from 'react';\n\nconst BinaryImage = ({ contentType, data, i}) => {\n\n  const _arrayBufferToBase64 = (data ) => {\n    var binary = '';\n    var bytes = new Uint8Array(data );\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    return window.btoa( binary );\n  }\n  // Convert the binary data to a base64-encoded string\n  console.log(i,data)\n  // const base64String = btoa(String.fromCharCode(...new Uint8Array(data)));\n  // console.log(\"after\",base64String)\n  // Create the data URL\n  const dataURL = `data:${contentType};base64,${_arrayBufferToBase64(data)}`;\n\n  return (\n    <img src={dataURL} alt=\"Profile Pic\" />\n  );\n};\n\nexport default BinaryImage;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAC,CAAC,KAAK;EAE/C,MAAMC,oBAAoB,GAAIF,IAAI,IAAM;IACtC,IAAIG,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAACL,IAAK,CAAC;IACjC,IAAIM,GAAG,GAAGF,KAAK,CAACG,UAAU;IAC1B,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,GAAG,EAAEL,CAAC,EAAE,EAAE;MAC1BE,MAAM,IAAIK,MAAM,CAACC,YAAY,CAAEL,KAAK,CAAEH,CAAC,CAAG,CAAC;IAC/C;IACA,OAAOS,MAAM,CAACC,IAAI,CAAER,MAAO,CAAC;EAC9B,CAAC;EACD;EACAS,OAAO,CAACC,GAAG,CAACZ,CAAC,EAACD,IAAI,CAAC;EACnB;EACA;EACA;EACA,MAAMc,OAAO,GAAI,QAAOf,WAAY,WAAUG,oBAAoB,CAACF,IAAI,CAAE,EAAC;EAE1E,oBACEH,OAAA;IAAKkB,GAAG,EAAED,OAAQ;IAACE,GAAG,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE3C,CAAC;AAACC,EAAA,GArBIvB,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}